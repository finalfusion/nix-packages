
# Generated by crate2nix 0.6.0-alpha.0 with the command:
#   "generate"
# See https://github.com/kolloch/crate2nix for more info.

{ lib
, callPackage
, stdenv
, buildRustCrate
, fetchurl
, fetchCrate
  # The features to enable for the root_crate or the workspace_members.
, rootFeatures? ["default"]}:

rec {
  #
  # "public" attributes that we attempt to keep stable with new versions of crate2nix.
  #

  rootCrate = {
    packageId = "finalfusion-python 0.5.0 (path+file:///home/daniel/git/finalfusion-python)";

    # Use this attribute to refer to the derivation building your root crate package.
    # You can override the features with rootCrate.build.override { features = [ "default" "feature1" ... ]; }.
    build = buildRustCrateWithFeatures {
      packageId = "finalfusion-python 0.5.0 (path+file:///home/daniel/git/finalfusion-python)";
      features = rootFeatures;
    };
  };
  root_crate =
    builtins.trace "root_crate is deprecated since crate2nix 0.4. Please use rootCrate instead." rootCrate.build;
  # Refer your crate build derivation by name here.
  # You can override the features with
  # workspaceMembers."${crateName}".build.override { features = [ "default" "feature1" ... ]; }.
  workspaceMembers = {
    "finalfusion-python" = {
      packageId = "finalfusion-python 0.5.0 (path+file:///home/daniel/git/finalfusion-python)";
      build = buildRustCrateWithFeatures {
        packageId = "finalfusion-python 0.5.0 (path+file:///home/daniel/git/finalfusion-python)";
        features = rootFeatures;
      };
    };
  };
  workspace_members =
    builtins.trace
      "workspace_members is deprecated in crate2nix 0.4. Please use workspaceMembers instead."
      lib.mapAttrs (n: v: v.build) workspaceMembers;

  #
  # "private" attributes that may change in every new version of crate2nix.
  #

  # Build and dependency information for crates.
  # Many of the fields are passed one-to-one to buildRustCrate.
  #
  # Noteworthy:
  # * `crateBin = [{name = ","; path = ",";}];`: a hack to disable building the binary.
  # * `dependencies`/`buildDependencies`: similar to the corresponding fields for buildRustCrate.
  #   but with additional information which is used during dependency/feature resolution.
  # * `resolvedDependencies`: the selected default features reported by cargo - only included for debugging.

  crates = {
    "aho-corasick 0.7.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "aho-corasick";
        version = "0.7.6";
        edition = "2015";
        sha256 = "1srdggg7iawz7rfyb79qfnz6vmzkgl6g6gabyd9ad6pbx7zzj8gz";
        libName = "aho_corasick";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "memchr" = {
            packageId = "memchr 2.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" ];
          "std" = [ "memchr/use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "arrayvec 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "arrayvec";
        version = "0.4.11";
        edition = "2015";
        sha256 = "1bd08rakkyr9jlf538cs80s3ly464ni3afr63zlw860ndar1zfmv";
        authors = [
          "bluss"
        ];
        dependencies = {
          "nodrop" = {
            packageId = "nodrop 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" ];
          "serde-1" = [ "serde" ];
        };
      };
    "autocfg 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "autocfg";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1f3bj604fyr4xh08r357hs3hpdzapiqgccvmj1jpi953ffqrp09a";
        authors = [
          "Josh Stone <cuviper@gmail.com>"
        ];
        features = {
        };
      };
    "backtrace 0.3.33 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "backtrace";
        version = "0.3.33";
        edition = "2018";
        sha256 = "1fkzblhr16hix22sdb22n41l98lrqch86zzpvralh1n83q8qjw98";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "backtrace-sys" = {
            packageId = "backtrace-sys 0.1.31 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "cfg-if" = "cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "rustc-demangle" = "rustc-demangle 0.1.15 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" "libunwind" "libbacktrace" "dladdr" "dbghelp" ];
          "gimli-symbolize" = [ "addr2line" "findshlibs" "memmap" "goblin" ];
          "libbacktrace" = [ "backtrace-sys" ];
          "rustc-dep-of-std" = [ "backtrace-sys/rustc-dep-of-std" "cfg-if/rustc-dep-of-std" "core" "compiler_builtins" "libc/rustc-dep-of-std" "rustc-demangle/rustc-dep-of-std" ];
          "serialize-rustc" = [ "rustc-serialize" ];
          "serialize-serde" = [ "serde" ];
          "verify-winapi" = [ "winapi/dbghelp" "winapi/handleapi" "winapi/libloaderapi" "winapi/minwindef" "winapi/processthreadsapi" "winapi/winbase" "winapi/winnt" ];
        };
        resolvedDefaultFeatures = [ "backtrace-sys" "dbghelp" "default" "dladdr" "libbacktrace" "libunwind" "std" ];
      };
    "backtrace-sys 0.1.31 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "backtrace-sys";
        version = "0.1.31";
        edition = "2015";
        sha256 = "1gv41cypl4y5r32za4gx2fks43d76sp1r3yb5524i4gs50lrkypv";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        buildDependencies = {
          "cc" = "cc 1.0.38 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
    "bitflags 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "bitflags";
        version = "1.1.0";
        edition = "2015";
        sha256 = "1iwa4jrqcf4lnbwl562a3lx3r0jkh1j88b219bsqvbm4sni67dyv";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "byteorder";
        version = "1.3.2";
        edition = "2015";
        sha256 = "099fxwc79ncpcl8dgg9hql8gznz11a3sjs7pai0mg6w8r05khvdx";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "cc 1.0.38 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cc";
        version = "1.0.38";
        edition = "2015";
        # Hack to suppress building binaries
        crateBin = [{name = ","; path = ",";}];
        sha256 = "17zc9i3mp8jjnrz20ah4inpz2ihmjxl93iswvzm5rv4grk60pzn4";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "parallel" = [ "rayon" ];
        };
      };
    "cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cfg-if";
        version = "0.1.9";
        edition = "2015";
        sha256 = "13g9p2mc5b2b5wn716fwvilzib376ycpkgk868yxfp16jzix57p7";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
        };
      };
    "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cloudabi";
        version = "0.0.3";
        edition = "2015";
        sha256 = "1z9lby5sr6vslfd14d6igk03s7awf91mxpsfmsp3prxbxlk0x7h5";
        libPath = "cloudabi.rs";
        authors = [
          "Nuxi (https://nuxi.nl/) and contributors"
        ];
        dependencies = {
          "bitflags" = {
            packageId = "bitflags 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "bitflags" ];
        };
        resolvedDefaultFeatures = [ "bitflags" "default" ];
      };
    "crossbeam-deque 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-deque";
        version = "0.6.3";
        edition = "2015";
        sha256 = "07dahkh6rc09nzg7054rnmxhni263pi9arcyjyy822kg59c0lfz8";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "crossbeam-epoch" = "crossbeam-epoch 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "crossbeam-utils" = "crossbeam-utils 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "crossbeam-epoch 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-epoch";
        version = "0.7.1";
        edition = "2015";
        sha256 = "1n2p8rqsg0g8dws6kvjgi5jsbnd42l45dklnzc8vihjcxa6712bg";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "arrayvec" = {
            packageId = "arrayvec 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "cfg-if" = "cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
          "crossbeam-utils" = {
            packageId = "crossbeam-utils 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "lazy_static" = {
            packageId = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "memoffset" = "memoffset 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "scopeguard" = {
            packageId = "scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" ];
          "nightly" = [ "crossbeam-utils/nightly" "arrayvec/use_union" ];
          "std" = [ "crossbeam-utils/std" "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
    "crossbeam-queue 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-queue";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1hannzr5w6j5061kg5iba4fzi6f2xpqv7bkcspfq17y1i8g0mzjj";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "crossbeam-utils" = "crossbeam-utils 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "crossbeam-utils 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-utils";
        version = "0.6.5";
        edition = "2015";
        sha256 = "1z7wgcl9d22r2x6769r5945rnwf3jqfrrmb16q7kzk292r1d4rdg";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
          "lazy_static" = {
            packageId = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
    "ctor 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ctor";
        version = "0.1.9";
        edition = "2018";
        sha256 = "1028s4rx1s1zx291ahfba6gvb85phvhldg27fvcpqxm1qwp3jqc0";
        procMacro = true;
        authors = [
          "Matt Mastracci <matthew@mastracci.com>"
        ];
        dependencies = {
          "quote" = "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = {
            packageId = "syn 0.15.42 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "full" "fold" "parsing" "printing" "proc-macro" ];
          };
        };
        features = {
        };
      };
    "either 1.5.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "either";
        version = "1.5.2";
        edition = "2015";
        sha256 = "1zqq1057c51f53ga4p9l4dd8ax6md27h1xjrjp2plkvml5iymks5";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
    "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "failure";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1msaj1c0fg12dzyf4fhxqlx1gfx41lj2smdjmkc9hkrgajk2g3kx";
        authors = [
          "Without Boats <boats@mozilla.com>"
        ];
        dependencies = {
          "backtrace" = {
            packageId = "backtrace 0.3.33 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "failure_derive" = {
            packageId = "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "std" "derive" ];
          "derive" = [ "failure_derive" ];
          "std" = [ "backtrace" ];
        };
        resolvedDefaultFeatures = [ "backtrace" "default" "derive" "failure_derive" "std" ];
      };
    "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "failure_derive";
        version = "0.1.5";
        edition = "2015";
        sha256 = "1wzk484b87r4qszcvdl2bkniv5ls4r2f2dshz7hmgiv6z4ln12g0";
        procMacro = true;
        authors = [
          "Without Boats <woboats@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = "syn 0.15.42 (registry+https://github.com/rust-lang/crates.io-index)";
          "synstructure" = "synstructure 0.10.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "finalfusion 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "finalfusion";
        version = "0.9.0";
        edition = "2018";
        sha256 = "05p31mv12h9168cbi62b6grk7spq6v9g8qr87pxgrhpllz93a2zr";
        authors = [
          "Daniël de Kok <me@danieldk.eu>"
        ];
        dependencies = {
          "byteorder" = "byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "fnv" = "fnv 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "itertools" = "itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "memmap" = "memmap 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "ndarray" = "ndarray 0.12.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "ordered-float" = "ordered-float 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand" = "rand 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_xorshift" = "rand_xorshift 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "reductive" = "reductive 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde" = {
            packageId = "serde 1.0.99 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "derive" ];
          };
          "toml" = "toml 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "finalfusion-python 0.5.0 (path+file:///home/daniel/git/finalfusion-python)"
      = rec {
        crateName = "finalfusion-python";
        version = "0.5.0";
        edition = "2018";
        src = (builtins.filterSource sourceFilter ./.);
        authors = [
          "Daniël de Kok <me@danieldk.eu>"
        ];
        libName = "finalfusion";
        type = [ "cdylib" ];
        dependencies = {
          "failure" = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "finalfusion" = "finalfusion 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "itertools" = "itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
          "ndarray" = "ndarray 0.12.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "numpy" = "numpy 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "pyo3" = {
            packageId = "pyo3 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "extension-module" ];
          };
          "toml" = "toml 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "fnv 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "fnv";
        version = "1.0.6";
        edition = "2015";
        sha256 = "128mlh23y3gg6ag5h8iiqlcbl59smisdzraqy88ldrf75kbw27ip";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
        };
      };
    "fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "fuchsia-cprng";
        version = "0.1.1";
        edition = "2018";
        sha256 = "07apwv9dj716yjlcj29p94vkqn5zmfh7hlrqvrjx3wzshphc95h9";
        authors = [
          "Erick Tryzelaar <etryzelaar@google.com>"
        ];
        features = {
        };
      };
    "ghost 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ghost";
        version = "0.1.0";
        edition = "2018";
        sha256 = "03kpnfk7xlkjv18mfvqdprhlq625lfri6l163lhrfma7j9c7i730";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = "syn 0.15.42 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "indoc 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "indoc";
        version = "0.3.4";
        edition = "2018";
        sha256 = "0jd2axphh5m8yrpj77rijf6pap43ic9wrph68hiz0lckbnn02z3b";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "indoc-impl" = "indoc-impl 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "proc-macro-hack" = "proc-macro-hack 0.5.9 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "unstable" = [ "indoc-impl/unstable" ];
        };
      };
    "indoc-impl 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "indoc-impl";
        version = "0.3.4";
        edition = "2018";
        sha256 = "1mkjjshsygdd10sn6fyfk3ki4jilygxhza6606s3rcx789nqrdqx";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro-hack" = "proc-macro-hack 0.5.9 (registry+https://github.com/rust-lang/crates.io-index)";
          "proc-macro2" = "proc-macro2 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = "syn 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "unindent" = "unindent 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "inventory 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "inventory";
        version = "0.1.4";
        edition = "2018";
        sha256 = "0a7yndzhxjfkk2baf6zb0ix886lwcsbm45zg05ci272wbjcyz3zh";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "ctor" = "ctor 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
          "ghost" = "ghost 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "inventory-impl" = "inventory-impl 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "inventory-impl 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "inventory-impl";
        version = "0.1.4";
        edition = "2018";
        sha256 = "07y47wbk367y207qfw9lx2wypz3wp2247vbq3vmypbapixdpv4c1";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = "syn 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "itertools 0.7.11 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "itertools";
        version = "0.7.11";
        edition = "2015";
        sha256 = "0gavmkvn2c3cwfwk5zl5p7saiqn4ww227am5ykn6pgfm7c6ppz56";
        authors = [
          "bluss"
        ];
        dependencies = {
          "either" = {
            packageId = "either 1.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "use_std" ];
        };
      };
    "itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "itertools";
        version = "0.8.0";
        edition = "2015";
        sha256 = "0xpz59yf03vyj540i7sqypn2aqfid08c4vzyg0l6rqm08da77n7n";
        authors = [
          "bluss"
        ];
        dependencies = {
          "either" = {
            packageId = "either 1.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
    "itoa 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "itoa";
        version = "0.4.4";
        edition = "2015";
        sha256 = "1fqc34xzzl2spfdawxd9awhzl0fwf1y6y4i94l8bq8rfrzd90awl";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "lazy_static";
        version = "1.3.0";
        edition = "2015";
        sha256 = "1vv47va18ydk7dx5paz88g3jy1d3lwbx6qpxkbj8gyfv770i4b1y";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        features = {
          "spin_no_std" = [ "spin" ];
        };
      };
    "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "libc";
        version = "0.2.62";
        edition = "2015";
        sha256 = "1vsb4pyn6gl6sri6cv5hin5wjfgk7lk2bshzmxb1xnkckjhz4gbx";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "align" "rustc-std-workspace-core" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "log";
        version = "0.4.7";
        edition = "2015";
        sha256 = "0l5y0kd63l6mpw68r74asgk59rwqxmcjz8azjk9fax04r3gyzh05";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "matrixmultiply 0.1.15 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "matrixmultiply";
        version = "0.1.15";
        edition = "2015";
        sha256 = "0ix1i4lnkfqnzv8f9wr34bf0mlr1sx5hr7yr70k4npxmwxscvdj5";
        authors = [
          "bluss"
        ];
        dependencies = {
          "rawpointer" = "rawpointer 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "memchr 2.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "memchr";
        version = "2.2.1";
        edition = "2015";
        sha256 = "1mj5z8lhz6jbapslpq8a39pwcsl1p0jmgp7wgcj7nv4pcqhya7a0";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
    "memmap 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "memmap";
        version = "0.7.0";
        edition = "2015";
        sha256 = "1j1rz5p4vh3i5p6rxy620wypj36xc7qarw6dj3353ym67zfaml18";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "basetsd" "handleapi" "memoryapi" "minwindef" "std" "sysinfoapi" ];
          };
        };
        features = {
        };
      };
    "memoffset 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "memoffset";
        version = "0.2.1";
        edition = "2015";
        sha256 = "00vym01jk9slibq2nsiilgffp7n6k52a4q3n4dqp0xf5kzxvffcf";
        authors = [
          "Gilad Naaman <gilad.naaman@gmail.com>"
        ];
        features = {
        };
      };
    "ndarray 0.12.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ndarray";
        version = "0.12.1";
        edition = "2015";
        sha256 = "13708k97kdjfj6g4z1yapjln0v4m7zj0114h8snw44fj79l00346";
        authors = [
          "bluss"
          "Jim Turner"
        ];
        dependencies = {
          "itertools" = {
            packageId = "itertools 0.7.11 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "matrixmultiply" = "matrixmultiply 0.1.15 (registry+https://github.com/rust-lang/crates.io-index)";
          "num-complex" = "num-complex 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "num-traits" = "num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "blas" = [ "cblas-sys" "blas-src" ];
          "docs" = [ "rustc-serialize" "serde-1" ];
          "serde-1" = [ "serde" ];
          "test" = [ "test-blas-openblas-sys" ];
          "test-blas-openblas-sys" = [ "blas" ];
        };
      };
    "ndarray-parallel 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ndarray-parallel";
        version = "0.9.0";
        edition = "2015";
        sha256 = "1y3hyiry8jrk5i1wd7a95r9s3x2shmlv8wrbhnfkbrg8h5h39p17";
        authors = [
          "bluss"
        ];
        dependencies = {
          "ndarray" = "ndarray 0.12.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "rayon" = "rayon 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "nodrop 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "nodrop";
        version = "0.1.13";
        edition = "2015";
        sha256 = "0gkfx6wihr9z0m8nbdhma5pyvbipznjpkzny2d4zkc05b0vnhinb";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "std" ];
          "use_union" = [ "nodrop-union" ];
        };
      };
    "num-complex 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "num-complex";
        version = "0.2.3";
        edition = "2015";
        sha256 = "1l8gwn4cqhx77wzhzslwxhryrr5h4vsv19ys8wr5xb1g332805m9";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "num-traits" = {
            packageId = "num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        buildDependencies = {
          "autocfg" = "autocfg 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-traits/i128" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "num-traits";
        version = "0.2.8";
        edition = "2015";
        sha256 = "1mnlmy35n734n9xlq0qkfbgzz33x09a1s4rfj30p1976p09b862v";
        authors = [
          "The Rust Project Developers"
        ];
        buildDependencies = {
          "autocfg" = "autocfg 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "num_cpus 1.10.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "num_cpus";
        version = "1.10.1";
        edition = "2015";
        sha256 = "1zi5s2cbnqqb0k0kdd6gqn2x97f9bssv44430h6w28awwzppyh8i";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = {
          "libc" = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "numpy 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "numpy";
        version = "0.7.0";
        edition = "2018";
        sha256 = "1qa5dkidxwmiha42l847pnpqmqhvcfkxbc90qvfb7m1yn5bca7q3";
        authors = [
          "Toshiki Teramura <toshiki.teramura@gmail.com>"
          "Yuji Kanagawa <yuji.kngw.80s.revive@gmail.com>"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
          "ndarray" = "ndarray 0.12.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "num-complex" = "num-complex 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "num-traits" = "num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "pyo3" = "pyo3 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "python3" = [ "pyo3/python3" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "ordered-float 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ordered-float";
        version = "1.0.2";
        edition = "2015";
        sha256 = "1bwjh1gkh2n6zqb2q1a04gkskgz3hxbj3w7fvhx6yd7l0nbmbd1b";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
          "Matt Brubeck <mbrubeck@limpet.net>"
        ];
        dependencies = {
          "num-traits" = {
            packageId = "num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "paste 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "paste";
        version = "0.1.6";
        edition = "2018";
        sha256 = "1xi423qww4w5i9qli1c4jw6lz1jy1wv66achns96llyckbrpmn58";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "paste-impl" = "paste-impl 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "proc-macro-hack" = "proc-macro-hack 0.5.9 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "paste-impl 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "paste-impl";
        version = "0.1.6";
        edition = "2018";
        sha256 = "05g0fp8h257gic2iji15h9sf241752x2804c0z50s2ifp0w7jyc6";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro-hack" = "proc-macro-hack 0.5.9 (registry+https://github.com/rust-lang/crates.io-index)";
          "proc-macro2" = "proc-macro2 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = "syn 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "proc-macro-hack 0.5.9 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "proc-macro-hack";
        version = "0.5.9";
        edition = "2015";
        sha256 = "1w99ilwdwl0xdg6bxv6i8z9zlr00n8i28npcf7f212s07jphagig";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = "syn 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "proc-macro2";
        version = "0.4.30";
        edition = "2015";
        sha256 = "0iifv51wrm6r4r2gghw6rray3nv53zcap355bbz1nsmbhj5s09b9";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "unicode-xid" = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
    "proc-macro2 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "proc-macro2";
        version = "1.0.3";
        edition = "2018";
        sha256 = "0qv29h6pz6n0b4qi8w240l3xppsw26bk5ga2vcjk3nhji0nsplwk";
        libName = "proc_macro2";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "unicode-xid" = "unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
    "pyo3 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "pyo3";
        version = "0.8.0";
        edition = "2018";
        sha256 = "06lyk9kznsw391f2w777p0ipigrxssijmiklhxdj34kn7kygrwd6";
        authors = [
          "PyO3 Project and Contributors <https://github.com/PyO3>"
        ];
        dependencies = {
          "indoc" = "indoc 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "inventory" = "inventory 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
          "num-traits" = "num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "paste" = "paste 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "pyo3cls" = "pyo3cls 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "spin" = "spin 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "unindent" = "unindent 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "regex" = "regex 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde" = {
            packageId = "serde 1.0.99 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "derive" ];
          };
          "serde_json" = "serde_json 1.0.40 (registry+https://github.com/rust-lang/crates.io-index)";
          "version_check" = "version_check 0.9.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "unsound-subclass" = [ "pyo3cls/unsound-subclass" ];
        };
        resolvedDefaultFeatures = [ "default" "extension-module" ];
      };
    "pyo3-derive-backend 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "pyo3-derive-backend";
        version = "0.8.0";
        edition = "2018";
        sha256 = "1b37ksxsk6dflfhr542wxrcxrd22gpz8rxhxvdl0aym8infg1av0";
        authors = [
          "PyO3 Project and Contributors <https://github.com/PyO3>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = {
            packageId = "syn 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "full" "extra-traits" ];
          };
        };
        features = {
        };
      };
    "pyo3cls 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "pyo3cls";
        version = "0.8.0";
        edition = "2018";
        sha256 = "0zf0jcg102ixhjffjcn8l205zpd6qqqpqiidkq26nmji3ffn8n18";
        procMacro = true;
        authors = [
          "PyO3 Project and Contributors <https://github.com/PyO3>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "pyo3-derive-backend" = "pyo3-derive-backend 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = {
            packageId = "syn 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "full" "extra-traits" ];
          };
        };
        features = {
          "unsound-subclass" = [ "pyo3-derive-backend/unsound-subclass" ];
        };
      };
    "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "quote";
        version = "0.6.13";
        edition = "2015";
        sha256 = "1hrvsin40i4q8swrhlj9057g7nsp0lg02h8zbzmgz14av9mzv8g8";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = {
            packageId = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
    "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "quote";
        version = "1.0.2";
        edition = "2018";
        sha256 = "0r7030w7dymarn92gjgm02hsm04fwsfs6f1l20wdqiyrm9z8rs5q";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = {
            packageId = "proc-macro2 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
    "rand 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand";
        version = "0.6.5";
        edition = "2015";
        sha256 = "0zbck48159aj8zrwzf80sd9xxh96w4f4968nshwjpysjvflimvgb";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = target."unix";
          };
          "rand_chacha" = "rand_chacha 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_core" = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_hc" = "rand_hc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_isaac" = "rand_isaac 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_jitter" = "rand_jitter 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_os" = {
            packageId = "rand_os 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "rand_pcg" = "rand_pcg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_xorshift" = "rand_xorshift 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "minwindef" "ntsecapi" "profileapi" "winnt" ];
          };
        };
        buildDependencies = {
          "autocfg" = "autocfg 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "simd_support" ];
          "serde1" = [ "rand_core/serde1" "rand_isaac/serde1" "rand_xorshift/serde1" ];
          "simd_support" = [ "packed_simd" ];
          "std" = [ "rand_core/std" "alloc" "rand_os" "rand_jitter/std" ];
          "stdweb" = [ "rand_os/stdweb" ];
          "wasm-bindgen" = [ "rand_os/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "rand_os" "std" ];
      };
    "rand_chacha 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_chacha";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0xnxm4mjd7wjnh18zxc1yickw58axbycp35ciraplqdfwn1gffwi";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "rand_core" = {
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        buildDependencies = {
          "autocfg" = "autocfg 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_core";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0q0ssgpj9x5a6fda83nhmfydy7a6c0wvxm0jhncsmjx8qp8gw91m";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "rand_core" = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "serde1" = [ "rand_core/serde1" ];
          "std" = [ "rand_core/std" ];
        };
      };
    "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_core";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0wb5iwhffibj0pnpznhv1g3i7h1fnhz64s3nz74fz6vsm3q6q3br";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
    "rand_hc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_hc";
        version = "0.1.0";
        edition = "2015";
        sha256 = "05agb75j87yp7y1zk8yf7bpm66hc0673r3dlypn0kazynr6fdgkz";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "rand_core" = {
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
        };
      };
    "rand_isaac 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_isaac";
        version = "0.1.1";
        edition = "2015";
        sha256 = "10hhdh5b5sa03s6b63y9bafm956jwilx41s71jbrzl63ccx8lxdq";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "rand_core" = {
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "serde1" = [ "serde" "serde_derive" "rand_core/serde1" ];
        };
      };
    "rand_jitter 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_jitter";
        version = "0.1.4";
        edition = "2015";
        sha256 = "13nr4h042ab9l7qcv47bxrxw3gkf2pc3cni6c9pyi4nxla0mm7b6";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = ((target."os" == "macos") || (target."os" == "ios"));
          };
          "rand_core" = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "windows");
            features = [ "profileapi" ];
          };
        };
        features = {
          "std" = [ "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "rand_os 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_os";
        version = "0.1.3";
        edition = "2015";
        sha256 = "0ywwspizgs9g8vzn6m5ix9yg36n15119d6n792h7mk4r5vs0ww4j";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "cloudabi" = {
            packageId = "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "cloudabi");
          };
          "fuchsia-cprng" = {
            packageId = "fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "fuchsia");
          };
          "libc" = {
            packageId = "libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "rand_core" = {
            packageId = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "std" ];
          };
          "rdrand" = {
            packageId = "rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."env" == "sgx");
          };
          "winapi" = {
            packageId = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "minwindef" "ntsecapi" "winnt" ];
          };
        };
        features = {
        };
      };
    "rand_pcg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_pcg";
        version = "0.1.2";
        edition = "2015";
        sha256 = "04qgi2ai2z42li5h4aawvxbpnlqyjfnipz9d6k73mdnl6p1xq938";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "rand_core" = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "autocfg" = "autocfg 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "serde1" = [ "serde" "serde_derive" ];
        };
      };
    "rand_xorshift 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_xorshift";
        version = "0.1.1";
        edition = "2015";
        sha256 = "0v365c4h4lzxwz5k5kp9m0661s0sss7ylv74if0xb4svis9sswnn";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "rand_core" = {
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "serde1" = [ "serde" "serde_derive" ];
        };
      };
    "rawpointer 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rawpointer";
        version = "0.1.0";
        edition = "2015";
        sha256 = "0hblv2cv310ixf5f1jw4nk9w5pb95wh4dwqyjv07g2xrshbw6j04";
        authors = [
          "bluss"
        ];
        features = {
        };
      };
    "rayon 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rayon";
        version = "1.1.0";
        edition = "2015";
        sha256 = "07984mgfdkv8zfg8b9wvjssfhm8wz1x9ls2lc9dfmbjv7kmfag4l";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = {
          "crossbeam-deque" = "crossbeam-deque 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "either" = {
            packageId = "either 1.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "rayon-core" = "rayon-core 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "rayon-core 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rayon-core";
        version = "1.5.0";
        edition = "2015";
        sha256 = "1aarjhj57dppxz3b2rvwdxvq47464sm84423vpwjm9yll8pc2ac7";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = {
          "crossbeam-deque" = "crossbeam-deque 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "crossbeam-queue" = "crossbeam-queue 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "crossbeam-utils" = "crossbeam-utils 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "lazy_static" = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "num_cpus" = "num_cpus 1.10.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rdrand";
        version = "0.4.0";
        edition = "2015";
        sha256 = "15hrcasn0v876wpkwab1dwbk9kvqwrb3iv4y4dibb6yxnfvzwajk";
        authors = [
          "Simonas Kazlauskas <rdrand@kazlauskas.me>"
        ];
        dependencies = {
          "rand_core" = {
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "reductive 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "reductive";
        version = "0.2.0";
        edition = "2018";
        sha256 = "0pca4j30lbbzfiimgkj2m0gdmidjzqkjvbxn0m9fdl46w7xgqhik";
        authors = [
          "Daniël de Kok <me@danieldk.eu>"
        ];
        dependencies = {
          "log" = "log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "ndarray" = "ndarray 0.12.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "ndarray-parallel" = "ndarray-parallel 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "num-traits" = "num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "ordered-float" = "ordered-float 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand" = "rand 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_xorshift" = "rand_xorshift 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "rayon" = "rayon 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "accelerate" = [ "ndarray-linalg/accelerate" ];
          "intel-mkl" = [ "ndarray-linalg/intel-mkl" ];
          "netlib" = [ "ndarray-linalg/netlib" ];
          "openblas" = [ "ndarray-linalg/openblas" ];
          "opq-train" = [ "ndarray-linalg" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "regex 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "regex";
        version = "1.3.1";
        edition = "2015";
        sha256 = "0508b01q7iwky5gzp1cc3lpz6al1qam8skgcvkfgxr67nikiz7jn";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "aho-corasick" = {
            packageId = "aho-corasick 0.7.6 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "memchr" = {
            packageId = "memchr 2.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "regex-syntax" = {
            packageId = "regex-syntax 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "thread_local" = {
            packageId = "thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "std" "perf" "unicode" ];
          "perf" = [ "perf-cache" "perf-dfa" "perf-inline" "perf-literal" ];
          "perf-cache" = [ "thread_local" ];
          "perf-literal" = [ "aho-corasick" "memchr" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
          "unicode-age" = [ "regex-syntax/unicode-age" ];
          "unicode-bool" = [ "regex-syntax/unicode-bool" ];
          "unicode-case" = [ "regex-syntax/unicode-case" ];
          "unicode-gencat" = [ "regex-syntax/unicode-gencat" ];
          "unicode-perl" = [ "regex-syntax/unicode-perl" ];
          "unicode-script" = [ "regex-syntax/unicode-script" ];
          "unicode-segment" = [ "regex-syntax/unicode-segment" ];
          "unstable" = [ "pattern" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "aho-corasick" "default" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "thread_local" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
      };
    "regex-syntax 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "regex-syntax";
        version = "0.6.12";
        edition = "2015";
        sha256 = "1lqhddhwzpgq8zfkxhm241n7g4m3yc11fb4098dkgawbxvybr53v";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "unicode" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
        };
        resolvedDefaultFeatures = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
      };
    "rustc-demangle 0.1.15 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rustc-demangle";
        version = "0.1.15";
        edition = "2015";
        sha256 = "04rgsfzhz4k9s56vkczsdbvmvg9409xp0nw4cy99lb2i0aa0255s";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
    "ryu 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ryu";
        version = "1.0.0";
        edition = "2015";
        sha256 = "0hysqba7hi31xw1jka8jh7qb4m9fx5l6vik55wpc3rpsg46cwgbf";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
        };
      };
    "scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "scopeguard";
        version = "0.3.3";
        edition = "2015";
        sha256 = "0i1l013csrqzfz6c68pr5pi01hg5v5yahq8fsdmaxy6p8ygsjf3r";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
    "serde 1.0.99 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "serde";
        version = "1.0.99";
        edition = "2015";
        sha256 = "1wwj6rv8h7k1sc0s8b8jcwcr54ayg46zjfv8z9a59hgnzg17nr86";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "serde_derive" = {
            packageId = "serde_derive 1.0.98 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "std" ];
          "derive" = [ "serde_derive" ];
        };
        resolvedDefaultFeatures = [ "default" "derive" "serde_derive" "std" ];
      };
    "serde_derive 1.0.98 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "serde_derive";
        version = "1.0.98";
        edition = "2015";
        sha256 = "0yk3850f0rbsaqrv0a4x7mqsfkpfipbxas45vv03sfdmxvpwcrvg";
        procMacro = true;
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = {
            packageId = "syn 0.15.42 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "visit" ];
          };
        };
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "serde_json 1.0.40 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "serde_json";
        version = "1.0.40";
        edition = "2015";
        sha256 = "1wf8lkisjvyg4ghp2fwm3ysymjy66l030l8d7p6033wiayfzpyh3";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "itoa" = "itoa 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "ryu" = "ryu 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde" = "serde 1.0.99 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "preserve_order" = [ "indexmap" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "spin 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "spin";
        version = "0.5.2";
        edition = "2015";
        sha256 = "1x0mfk6jfxknrp833xq97kzqxidlryndn0v3xkwf4pd7l9hr5k4h";
        authors = [
          "Mathijs van de Nes <git@mathijs.vd-nes.nl>"
          "John Ericson <git@JohnEricson.me>"
        ];
        features = {
        };
      };
    "syn 0.15.42 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "syn";
        version = "0.15.42";
        edition = "2015";
        sha256 = "0yjvq4izrsp6pvpahr86m1mq09nbq6a27fizkmg76xh8fhwfpd79";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = {
            packageId = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "quote" = {
            packageId = "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          };
          "unicode-xid" = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "extra-traits" "fold" "full" "parsing" "printing" "proc-macro" "quote" "visit" ];
      };
    "syn 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "syn";
        version = "1.0.5";
        edition = "2018";
        sha256 = "08qbk425r8c4q4rrpq1q9wkd3v3bji8nlfaxj8v4l7lkpjkh0xgs";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = {
            packageId = "proc-macro2 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "quote" = {
            packageId = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          };
          "unicode-xid" = "unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "extra-traits" "full" "parsing" "printing" "proc-macro" "quote" ];
      };
    "synstructure 0.10.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "synstructure";
        version = "0.10.2";
        edition = "2015";
        sha256 = "0bp29grjsim99xm1l6h38mbl98gnk47lf82rawlmws5zn4asdpj4";
        authors = [
          "Nika Layzell <nika@thelayzells.com>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = {
            packageId = "syn 0.15.42 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "visit" "extra-traits" ];
          };
          "unicode-xid" = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "thread_local";
        version = "0.3.6";
        edition = "2015";
        sha256 = "02rksdwjmz2pw9bmgbb4c0bgkbq5z6nvg510sq1s6y2j1gam0c7i";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = {
          "lazy_static" = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "toml 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "toml";
        version = "0.5.1";
        edition = "2018";
        sha256 = "1878ifdh576viwqg80vnhm51bng96vhyfi20jk8fv6wcifhgl4dg";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "serde" = "serde 1.0.99 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "preserve_order" = [ "linked-hash-map" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-xid";
        version = "0.1.0";
        edition = "2015";
        sha256 = "05wdmwlfzxhq3nhsxn6wx4q8dhxzzfb9szsz6wiw092m1rjj01zj";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-xid";
        version = "0.2.0";
        edition = "2015";
        sha256 = "1c85gb3p3qhbjvfyjb31m06la4f024jx319k10ig7n47dz2fk8v7";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "unindent 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unindent";
        version = "0.1.4";
        edition = "2018";
        sha256 = "0sjmwba80xydjpr9adhnsay7fbfrw406kkxln710ihrasxsk8889";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
        };
      };
    "version_check 0.9.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "version_check";
        version = "0.9.1";
        edition = "2015";
        sha256 = "00aywbaicdi81gcxpqdz6g0l96885bz4bml5c9xfna5p01vrh4li";
        authors = [
          "Sergio Benitez <sb@sergio.bz>"
        ];
        features = {
        };
      };
    "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi";
        version = "0.3.7";
        edition = "2015";
        sha256 = "1k51gfkp0zqw7nj07y443mscs46icmdhld442s2073niap0kkdr8";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = {
          "winapi-i686-pc-windows-gnu" = {
            packageId = "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (stdenv.hostPlatform.config == "i686-pc-windows-gnu");
          };
          "winapi-x86_64-pc-windows-gnu" = {
            packageId = "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (stdenv.hostPlatform.config == "x86_64-pc-windows-gnu");
          };
        };
        features = {
          "debug" = [ "impl-debug" ];
        };
        resolvedDefaultFeatures = [ "basetsd" "handleapi" "memoryapi" "minwindef" "ntsecapi" "profileapi" "std" "sysinfoapi" "winnt" ];
      };
    "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-i686-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "05ihkij18r4gamjpxj4gra24514can762imjzlmak5wlzidplzrp";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-x86_64-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0n1ylmlsb8yg1v583i4xy0qmqg42275flvbc51hdqjjfjcl9vlbj";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
  };

  #
  # crate2nix/default.nix (excerpt start)
  # 

  # Target (platform) data for conditional dependencies.
  # This corresponds to what buildRustCrate is setting.
  target = {
      unix = true;
      windows = false;

      # This doesn't appear to be officially documented anywhere yet.
      # See https://github.com/rust-lang-nursery/rust-forge/issues/101.
      os = if stdenv.hostPlatform.isDarwin
        then "macos"
        else stdenv.hostPlatform.parsed.kernel.name;
      arch = stdenv.hostPlatform.parsed.cpu.name;
      family = "unix";
      env = "gnu";
      endian = if stdenv.hostPlatform.parsed.cpu.significantByte.name == "littleEndian" then "little" else "big";
      pointer_width = toString stdenv.hostPlatform.parsed.cpu.bits;
      vendor = stdenv.hostPlatform.parsed.vendor.name;
      debug_assertions = false;
  };

  /* Filters common temp files and build files */
  # TODO(pkolloch): Substitute with gitignore filter
  sourceFilter = name: type:
    let baseName = builtins.baseNameOf (builtins.toString name);
    in ! (
      # Filter out git
      baseName == ".gitignore" ||
      (type == "directory" && baseName == ".git" ) ||

      # Filter out build results
      (type == "directory" && (
        baseName == "target" ||
        baseName == "_site" ||
        baseName == ".sass-cache" ||
        baseName == ".jekyll-metadata" ||
        baseName == "build-artifacts"
        )) ||

      # Filter out nix-build result symlinks
      (type == "symlink" && lib.hasPrefix "result" baseName) ||

      # Filter out IDE config
      (type == "directory" && (
        baseName == ".idea" ||
        baseName == ".vscode"
        )) ||
      lib.hasSuffix ".iml" baseName ||

      # Filter out nix build files
      # lib.hasSuffix ".nix" baseName ||

      # Filter out editor backup / swap files.
      lib.hasSuffix "~" baseName ||
      builtins.match "^\\.sw[a-z]$$" baseName != null ||
      builtins.match "^\\..*\\.sw[a-z]$$" baseName != null ||
      lib.hasSuffix ".tmp" baseName ||
      lib.hasSuffix ".bak" baseName
    );

  /* Returns a buildRustCrate derivation for the given packageId and features. */
  buildRustCrateWithFeatures = { crateConfigs? crates, packageId, features } @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let mergedFeatures = mergePackageFeatures args;
        buildByPackageId = packageId:
          let features = mergedFeatures."${packageId}" or [];
              crateConfig = lib.filterAttrs (n: v: n != "resolvedDefaultFeatures") crateConfigs."${packageId}";
              dependencies =
                dependencyDerivations buildByPackageId features (crateConfig.dependencies or {});
              buildDependencies =
                dependencyDerivations buildByPackageId features (crateConfig.buildDependencies or {});
              dependenciesWithRenames =
                lib.filterAttrs (n: v: v ? "rename")
                  (crateConfig.buildDependencies or {} // crateConfig.dependencies or {});
              crateRenames =
                lib.mapAttrs (name: value: value.rename or name) dependenciesWithRenames;
          in buildRustCrate (crateConfig // { inherit features dependencies buildDependencies crateRenames; });
    in buildByPackageId packageId;

  /* Returns the actual derivations for the given dependencies. */
  dependencyDerivations = buildByPackageId: features: dependencies:
    assert (builtins.isFunction buildByPackageId);
    assert (builtins.isList features);
    assert (builtins.isAttrs dependencies);

    let enabledDependencies = filterEnabledDependencies dependencies features;
        depDerivation = dependencyName: dependency:
        buildByPackageId (dependencyPackageId dependency);
    in builtins.attrValues (lib.mapAttrs depDerivation enabledDependencies);

  /* Returns differences between cargo default features and crate2nix default features.
   *
   * This is useful for verifying the feature resolution in crate2nix.
   */
  diffDefaultPackageFeatures = {crateConfigs ? crates, packageId}:
    assert (builtins.isAttrs crateConfigs);

    let prefixValues = prefix: lib.mapAttrs (n: v: { "${prefix}" = v; });
        mergedFeatures =
          prefixValues
            "crate2nix"
            (mergePackageFeatures {inherit crateConfigs packageId; features = ["default"]; });
        configs = prefixValues "cargo" crateConfigs;
        combined = lib.foldAttrs (a: b: a // b) {} [ mergedFeatures configs ];
        onlyInCargo = builtins.attrNames (lib.filterAttrs (n: v: !(v ? "crate2nix" ) && (v ? "cargo")) combined);
        onlyInCrate2Nix = builtins.attrNames (lib.filterAttrs (n: v: (v ? "crate2nix" ) && !(v ? "cargo")) combined);
        differentFeatures = lib.filterAttrs
          (n: v:
          (v ? "crate2nix" )
          && (v ? "cargo")
          && (v.crate2nix.features or []) != (v."cargo".resolved_default_features or []))
          combined;
    in builtins.toJSON { inherit onlyInCargo onlyInCrate2Nix differentFeatures; };

  /* Returns the feature configuration by package id for the given input crate. */
  mergePackageFeatures = {crateConfigs ? crates, packageId, features} @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let packageFeatures = listOfPackageFeatures args;
        grouped = lib.groupBy (x: x.packageId) packageFeatures;
    in lib.mapAttrs (n: v: sortedUnique (builtins.concatLists (builtins.map (v: v.features) v))) grouped;

  /* Returns a { packageId, features } attribute set for every package needed for building the
     package for the given packageId with the given features.

     Returns multiple, potentially conflicting attribute sets for dependencies that are reachable
     by multiple paths in the dependency tree.
  */
  listOfPackageFeatures = {crateConfigs ? crates, packageId, features, dependencyPath? [packageId]} @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let
        crateConfig = crateConfigs."${packageId}" or (builtins.throw "Package not found: ${packageId}");
        expandedFeatures = expandFeatures (crateConfig.features or {}) features;

        depWithResolvedFeatures = dependencyName: dependency:
          let packageId = dependencyPackageId dependency;
              features = dependencyFeatures expandedFeatures dependencyName dependency;
          in { inherit packageId features; };

        resolveDependencies = path: dependencies:
          assert (builtins.isAttrs dependencies);

          let enabledDependencies = filterEnabledDependencies dependencies expandedFeatures;
              directDependencies =
                builtins.attrValues (lib.mapAttrs depWithResolvedFeatures enabledDependencies);
          in builtins.concatMap
            ({packageId, features}: listOfPackageFeatures {
              # This is purely for debugging.
              dependencyPath = dependencyPath ++ [path packageId];
              inherit crateConfigs packageId features;
            })
             directDependencies;

        resolvedDependencies = builtins.concatLists
          [
            (resolveDependencies "dependencies" (crateConfig.dependencies or {}))
            (resolveDependencies "buildDependencies" (crateConfig.buildDependencies or {}))
          ];

    in [{inherit packageId; features = expandedFeatures;}] ++ resolvedDependencies;

  /* Returns the enabled dependencies given the enabled features. */
  filterEnabledDependencies = dependencies: features:
    assert (builtins.isAttrs dependencies);
    assert (builtins.isList features);

    lib.filterAttrs
      (depName: dep:
        builtins.isString dep
        || dep.target or true
        && (!(dep.optional or false) || builtins.any (doesFeatureEnableDependency depName) features))
      dependencies;

  /* Returns whether the given feature should enable the given dependency. */
  doesFeatureEnableDependency = depName: feature:
    let prefix = "${depName}/";
        len = builtins.stringLength prefix;
        startsWithPrefix = builtins.substring 0 len feature == prefix;
    in feature == depName || startsWithPrefix;

  /* Returns the expanded features for the given inputFeatures by applying the rules in featureMap.

     featureMap is an attribute set which maps feature names to lists of further feature names to enable in case this
     feature is selected.
  */
  expandFeatures = featureMap: inputFeatures:
    assert (builtins.isAttrs featureMap);
    assert (builtins.isList inputFeatures);

    let expandFeature = feature:
          assert (builtins.isString feature);
          [feature] ++ (expandFeatures featureMap (featureMap."${feature}" or []));
        outFeatures = builtins.concatMap expandFeature inputFeatures;
    in sortedUnique outFeatures;

  /* The package ID of the given dependency. */
  dependencyPackageId = dependency: if builtins.isString dependency then dependency else dependency.packageId;

  /* Returns the actual dependencies for the given dependency. */
  dependencyFeatures = features: dependencyName: dependency:
    assert (builtins.isList features);
    assert (builtins.isString dependencyName);
    assert (builtins.isAttrs dependency || builtins.isString dependency);

    let defaultOrNil = if builtins.isString dependency || dependency.usesDefaultFeatures or true
                       then ["default"]
                       else [];
        explicitFeatures = if builtins.isString dependency then [] else dependency.features or [];
        additionalDependencyFeatures =

          let dependencyPrefix = dependencyName+"/";
              dependencyFeatures =
                builtins.filter (f: lib.hasPrefix dependencyPrefix f) features;
          in builtins.map (lib.removePrefix dependencyPrefix) dependencyFeatures;
    in
      defaultOrNil ++ explicitFeatures ++ additionalDependencyFeatures;

  /* Sorts and removes duplicates from a list of strings. */
  sortedUnique = features:
    assert (builtins.isList features);
    assert (builtins.all builtins.isString features);

    let outFeaturesSet = lib.foldl (set: feature: set // {"${feature}" = 1;} ) {} features;
        outFeaturesUnique = builtins.attrNames outFeaturesSet;
    in builtins.sort (a: b: a < b) outFeaturesUnique;

  #
  # crate2nix/default.nix (excerpt end)
  # 

}
