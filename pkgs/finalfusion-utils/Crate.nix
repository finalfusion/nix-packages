
# Generated by crate2nix 0.6.0-alpha.0 with the command:
#   "generate" "-o" "Cargo.nix"
# See https://github.com/kolloch/crate2nix for more info.

{ lib
, callPackage
, stdenv
, buildRustCrate
, fetchurl
, fetchCrate
  # The features to enable for the root_crate or the workspace_members.
, rootFeatures? ["default"]}:

rec {
  #
  # "public" attributes that we attempt to keep stable with new versions of crate2nix.
  #

  rootCrate = {
    packageId = "finalfusion-utils 0.10.0 (path+file:///home/daniel/git/finalfusion-utils)";

    # Use this attribute to refer to the derivation building your root crate package.
    # You can override the features with rootCrate.build.override { features = [ "default" "feature1" ... ]; }.
    build = buildRustCrateWithFeatures {
      packageId = "finalfusion-utils 0.10.0 (path+file:///home/daniel/git/finalfusion-utils)";
      features = rootFeatures;
    };
  };
  root_crate =
    builtins.trace "root_crate is deprecated since crate2nix 0.4. Please use rootCrate instead." rootCrate.build;
  # Refer your crate build derivation by name here.
  # You can override the features with
  # workspaceMembers."${crateName}".build.override { features = [ "default" "feature1" ... ]; }.
  workspaceMembers = {
    "finalfusion-utils" = {
      packageId = "finalfusion-utils 0.10.0 (path+file:///home/daniel/git/finalfusion-utils)";
      build = buildRustCrateWithFeatures {
        packageId = "finalfusion-utils 0.10.0 (path+file:///home/daniel/git/finalfusion-utils)";
        features = rootFeatures;
      };
    };
  };
  workspace_members =
    builtins.trace
      "workspace_members is deprecated in crate2nix 0.4. Please use workspaceMembers instead."
      lib.mapAttrs (n: v: v.build) workspaceMembers;

  #
  # "private" attributes that may change in every new version of crate2nix.
  #

  # Build and dependency information for crates.
  # Many of the fields are passed one-to-one to buildRustCrate.
  #
  # Noteworthy:
  # * `crateBin = [{name = ","; path = ",";}];`: a hack to disable building the binary.
  # * `dependencies`/`buildDependencies`: similar to the corresponding fields for buildRustCrate.
  #   but with additional information which is used during dependency/feature resolution.
  # * `resolvedDependencies`: the selected default features reported by cargo - only included for debugging.

  crates = {
    "aho-corasick 0.7.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "aho-corasick";
        version = "0.7.6";
        edition = "2015";
        sha256 = "1srdggg7iawz7rfyb79qfnz6vmzkgl6g6gabyd9ad6pbx7zzj8gz";
        libName = "aho_corasick";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "memchr" = {
            packageId = "memchr 2.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" ];
          "std" = [ "memchr/use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ansi_term";
        version = "0.11.0";
        edition = "2015";
        sha256 = "08fk0p2xvkqpmz3zlrwnf6l8sj2vngw464rvzspzp31sbgxbwm4v";
        authors = [
          "ogham@bsago.me"
          "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = {
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "windows");
            features = [ "errhandlingapi" "consoleapi" "processenv" ];
          };
        };
        features = {
        };
      };
    "approx 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "approx";
        version = "0.3.2";
        edition = "2015";
        sha256 = "1sziapqxz6qk1m3bv4pay1bfqv887pf6045qfg913ip4jmyv8fcb";
        authors = [
          "Brendan Zabarauskas <bjzaba@yahoo.com.au>"
        ];
        dependencies = {
          "num-traits" = {
            packageId = "num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "atty 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "atty";
        version = "0.2.13";
        edition = "2015";
        sha256 = "0a1ii8h9fvvrq05bz7j135zjjz1sjz6n2invn2ngxqri0jxgmip2";
        authors = [
          "softprops <d.tangren@gmail.com>"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = target."unix";
          };
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "consoleapi" "processenv" "minwinbase" "minwindef" "winbase" ];
          };
        };
        features = {
        };
      };
    "autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "autocfg";
        version = "0.1.7";
        edition = "2015";
        sha256 = "01iq4rs9kanj88pbwjxzqp5k4bgdsvz3y398nljz441rfws11mi4";
        authors = [
          "Josh Stone <cuviper@gmail.com>"
        ];
        features = {
        };
      };
    "backtrace 0.3.40 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "backtrace";
        version = "0.3.40";
        edition = "2018";
        sha256 = "0xzgw3vldpfcfhsxs17jx3l6vacfxm93g3l363k5vk0nc7avgzar";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "backtrace-sys" = {
            packageId = "backtrace-sys 0.1.32 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "rustc-demangle" = "rustc-demangle 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" "libunwind" "libbacktrace" "dladdr" "dbghelp" ];
          "gimli-symbolize" = [ "addr2line" "findshlibs" "memmap" "goblin" ];
          "libbacktrace" = [ "backtrace-sys" ];
          "rustc-dep-of-std" = [ "backtrace-sys/rustc-dep-of-std" "cfg-if/rustc-dep-of-std" "core" "compiler_builtins" "libc/rustc-dep-of-std" "rustc-demangle/rustc-dep-of-std" ];
          "serialize-rustc" = [ "rustc-serialize" ];
          "serialize-serde" = [ "serde" ];
          "verify-winapi" = [ "winapi/dbghelp" "winapi/handleapi" "winapi/libloaderapi" "winapi/minwindef" "winapi/processthreadsapi" "winapi/synchapi" "winapi/winbase" "winapi/winnt" ];
        };
        resolvedDefaultFeatures = [ "backtrace-sys" "dbghelp" "default" "dladdr" "libbacktrace" "libunwind" "std" ];
      };
    "backtrace-sys 0.1.32 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "backtrace-sys";
        version = "0.1.32";
        edition = "2015";
        sha256 = "1jrb7450v9kyqrjc97vzckbpwj9jakvc1jkq95i46g6mn9kvqkgr";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        buildDependencies = {
          "cc" = "cc 1.0.47 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
    "bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "bitflags";
        version = "1.2.1";
        edition = "2015";
        sha256 = "0b77awhpn7yaqjjibm69ginfn996azx5vkzfjj39g3wbsqs7mkxg";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "blas-src 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "blas-src";
        version = "0.2.1";
        edition = "2015";
        sha256 = "0zajr9px5a2ql4cwhj71gjc52rxkjy9zxjlajrvn67hhmi8yjvb7";
        authors = [
          "Ivan Ukhov <ivan.ukhov@gmail.com>"
          "Toshiki Teramura <toshiki.teramura@gmail.com>"
        ];
        features = {
          "accelerate" = [ "accelerate-src" ];
          "intel-mkl" = [ "intel-mkl-src" ];
          "netlib" = [ "netlib-src" ];
          "openblas" = [ "openblas-src" ];
        };
      };
    "blas-src 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "blas-src";
        version = "0.4.0";
        edition = "2015";
        sha256 = "18q8bfdr5n2bz1bmr812ycs5f8v6mhhy610hlrhhd19x4ddi3xy7";
        authors = [
          "Ivan Ukhov <ivan.ukhov@gmail.com>"
          "Stefan Kroboth <stefan.kroboth@gmail.com>"
          "Toshiki Teramura <toshiki.teramura@gmail.com>"
        ];
        dependencies = {
          "intel-mkl-src" = {
            packageId = "intel-mkl-src 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "netlib-src" = {
            packageId = "netlib-src 0.7.4 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "openblas-src" = {
            packageId = "openblas-src 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "accelerate" = [ "accelerate-src" ];
          "intel-mkl" = [ "intel-mkl-src" ];
          "netlib" = [ "netlib-src" ];
          "openblas" = [ "openblas-src" ];
        };
        resolvedDefaultFeatures = [ "intel-mkl" "intel-mkl-src" "netlib" "netlib-src" "openblas" "openblas-src" ];
      };
    "byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "byteorder";
        version = "1.3.2";
        edition = "2015";
        sha256 = "099fxwc79ncpcl8dgg9hql8gznz11a3sjs7pai0mg6w8r05khvdx";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "c2-chacha 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "c2-chacha";
        version = "0.2.3";
        edition = "2018";
        sha256 = "04vh0cc9g94cj6cq96sfv3lks7rx486jdn43rmqcvb2syh4y9dqj";
        authors = [
          "The CryptoCorrosion Contributors"
        ];
        dependencies = {
          "ppv-lite86" = {
            packageId = "ppv-lite86 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)";
            rename = "ppv-lite86";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" "simd" "rustcrypto_api" ];
          "rustcrypto_api" = [ "stream-cipher" "byteorder" ];
          "simd" = [ "ppv-lite86/simd" ];
          "std" = [ "ppv-lite86/std" ];
        };
        resolvedDefaultFeatures = [ "simd" "std" ];
      };
    "cauchy 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cauchy";
        version = "0.2.2";
        edition = "2018";
        sha256 = "0nl8lnrvshg00js8ascwzvifjprrds2q3qqgcg5fwqgybk4qrh1n";
        authors = [
          "Toshiki Teramura <toshiki.teramura@gmail.com>"
        ];
        dependencies = {
          "num-complex" = {
            packageId = "num-complex 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "serde" "rand" ];
          };
          "num-traits" = "num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand" = "rand 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde" = "serde 1.0.102 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "cblas-sys 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cblas-sys";
        version = "0.1.4";
        edition = "2015";
        sha256 = "1gxnyx9p3alvq4h1p6wa4fcrb3g0mbddk1bpikqw5fxp5y96cd9w";
        authors = [
          "Ivan Ukhov <ivan.ukhov@gmail.com>"
        ];
        dependencies = {
          "libc" = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "cc 1.0.47 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cc";
        version = "1.0.47";
        edition = "2018";
        # Hack to suppress building binaries
        crateBin = [{name = ","; path = ",";}];
        sha256 = "0s29s8nazjzk6s5dk5i0r5wdrs78fa7maai9y1wfy335wgg4whkf";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "parallel" = [ "num_cpus" "jobserver" ];
        };
      };
    "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cfg-if";
        version = "0.1.10";
        edition = "2018";
        sha256 = "0x52qzpbyl2f2jqs7kkqzgfki2cpq99gpfjjigdp8pwwfqk01007";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
    "clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "clap";
        version = "2.33.0";
        edition = "2015";
        sha256 = "054n9ngh6pkknpmd4acgdsp40iw6f5jzq8a4h2b76gnbvk6p5xjh";
        authors = [
          "Kevin K. <kbknapp@gmail.com>"
        ];
        dependencies = {
          "ansi_term" = {
            packageId = "ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = (!target."windows");
          };
          "atty" = {
            packageId = "atty 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "bitflags" = "bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "strsim" = {
            packageId = "strsim 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "textwrap" = "textwrap 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "unicode-width" = "unicode-width 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "vec_map" = {
            packageId = "vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "color" = [ "ansi_term" "atty" ];
          "default" = [ "suggestions" "color" "vec_map" ];
          "doc" = [ "yaml" ];
          "lints" = [ "clippy" ];
          "suggestions" = [ "strsim" ];
          "wrap_help" = [ "term_size" "textwrap/term_size" ];
          "yaml" = [ "yaml-rust" ];
        };
        resolvedDefaultFeatures = [ "ansi_term" "atty" "color" "default" "strsim" "suggestions" "vec_map" ];
      };
    "clicolors-control 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "clicolors-control";
        version = "1.0.1";
        edition = "2015";
        sha256 = "17yyqdc6c0jrxnby4gkiggf0ladpnvladarikglj170lg5zqjmsa";
        authors = [
          "Armin Ronacher <armin.ronacher@active-4.com>"
        ];
        dependencies = {
          "atty" = {
            packageId = "atty 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
          };
          "lazy_static" = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "winbase" "handleapi" "consoleapi" "processenv" ];
          };
        };
        features = {
          "default" = [ "terminal_autoconfig" ];
        };
        resolvedDefaultFeatures = [ "default" "terminal_autoconfig" ];
      };
    "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cloudabi";
        version = "0.0.3";
        edition = "2015";
        sha256 = "1z9lby5sr6vslfd14d6igk03s7awf91mxpsfmsp3prxbxlk0x7h5";
        libPath = "cloudabi.rs";
        authors = [
          "Nuxi (https://nuxi.nl/) and contributors"
        ];
        dependencies = {
          "bitflags" = {
            packageId = "bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "bitflags" ];
        };
        resolvedDefaultFeatures = [ "bitflags" "default" ];
      };
    "cmake 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cmake";
        version = "0.1.42";
        edition = "2015";
        sha256 = "13i927y08m2556isvwan2hm6niaz19z0r8m9ic0lj8dczv3alp9g";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "cc" = "cc 1.0.47 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "console 0.9.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "console";
        version = "0.9.1";
        edition = "2018";
        sha256 = "05a3m23b2rs5w29bn1mzp64jknqbb3g8yahpxn1vkn2q8n6520p0";
        authors = [
          "Armin Ronacher <armin.ronacher@active-4.com>"
        ];
        dependencies = {
          "clicolors-control" = "clicolors-control 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "encode_unicode" = {
            packageId = "encode_unicode 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
          };
          "lazy_static" = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
          "regex" = {
            packageId = "regex 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "std" ];
          };
          "termios" = {
            packageId = "termios 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "unicode-width" = {
            packageId = "unicode-width 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "winbase" "winuser" "consoleapi" "processenv" "wincon" ];
          };
        };
        features = {
          "default" = [ "unicode-width" ];
        };
        resolvedDefaultFeatures = [ "default" "unicode-width" ];
      };
    "crossbeam-deque 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-deque";
        version = "0.7.2";
        edition = "2015";
        sha256 = "0zybrbdlnv1jrchi2426glzjxx80hvawnjrk480k24jxfcrc5i51";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "crossbeam-epoch" = "crossbeam-epoch 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "crossbeam-utils" = "crossbeam-utils 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "crossbeam-epoch 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-epoch";
        version = "0.8.0";
        edition = "2015";
        sha256 = "1fd19z98kz4j06p18vwj8143v7m11fcac4wyhjj5wjrhzg4fyx1d";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "crossbeam-utils" = {
            packageId = "crossbeam-utils 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "lazy_static" = {
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "memoffset" = "memoffset 0.5.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "scopeguard" = {
            packageId = "scopeguard 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        buildDependencies = {
          "autocfg" = "autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "alloc" = [ "crossbeam-utils/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "crossbeam-utils/nightly" ];
          "std" = [ "crossbeam-utils/std" "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
    "crossbeam-queue 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-queue";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1hannzr5w6j5061kg5iba4fzi6f2xpqv7bkcspfq17y1i8g0mzjj";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "crossbeam-utils" = "crossbeam-utils 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "crossbeam-utils 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-utils";
        version = "0.6.6";
        edition = "2015";
        sha256 = "01gxccmrjkkcavdh8fc01kj3b5fmk10f0lkx66jmnv69kcssry72";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "lazy_static" = {
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
    "crossbeam-utils 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-utils";
        version = "0.7.0";
        edition = "2015";
        sha256 = "04l90g00g59ahb2n01q64pvijwg1ms6q724x3a0dsapiq32ia8yb";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "lazy_static" = {
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        buildDependencies = {
          "autocfg" = "autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
    "curl 0.4.25 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "curl";
        version = "0.4.25";
        edition = "2015";
        sha256 = "16v1ysapqyc658aqw3j4315pqc55pdg1a1k4bgzisnr7fnhds1hc";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "curl-sys" = {
            packageId = "curl-sys 0.4.24 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "libc" = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
          "openssl-probe" = {
            packageId = "openssl-probe 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = (target."unix" && (!(target."os" == "macos")));
          };
          "openssl-sys" = {
            packageId = "openssl-sys 0.9.52 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = (target."unix" && (!(target."os" == "macos")));
          };
          "schannel" = {
            packageId = "schannel 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."env" == "msvc");
          };
          "socket2" = "socket2 0.3.11 (registry+https://github.com/rust-lang/crates.io-index)";
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."env" == "msvc");
            features = [ "libloaderapi" "wincrypt" ];
          };
        };
        features = {
          "default" = [ "ssl" ];
          "force-system-lib-on-osx" = [ "curl-sys/force-system-lib-on-osx" ];
          "http2" = [ "curl-sys/http2" ];
          "mesalink" = [ "curl-sys/mesalink" ];
          "ssl" = [ "openssl-sys" "openssl-probe" "curl-sys/ssl" ];
          "static-curl" = [ "curl-sys/static-curl" ];
          "static-ssl" = [ "curl-sys/static-ssl" ];
        };
        resolvedDefaultFeatures = [ "default" "openssl-probe" "openssl-sys" "ssl" ];
      };
    "curl-sys 0.4.24 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "curl-sys";
        version = "0.4.24";
        edition = "2015";
        sha256 = "1xdygmbpq1fcz7wjd9b3wrg6km3minzfi4mjydz7nbvwvkpzjq6m";
        libName = "curl_sys";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "libc" = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
          "libz-sys" = "libz-sys 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)";
          "openssl-sys" = {
            packageId = "openssl-sys 0.9.52 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = (target."unix" && (!(target."os" == "macos")));
          };
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "winsock2" "ws2def" ];
          };
        };
        buildDependencies = {
          "cc" = "cc 1.0.47 (registry+https://github.com/rust-lang/crates.io-index)";
          "pkg-config" = "pkg-config 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)";
          "vcpkg" = {
            packageId = "vcpkg 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."env" == "msvc");
          };
        };
        features = {
          "default" = [ "ssl" ];
          "http2" = [ "libnghttp2-sys" ];
          "ssl" = [ "openssl-sys" ];
          "static-ssl" = [ "openssl-sys/vendored" ];
        };
        resolvedDefaultFeatures = [ "openssl-sys" "ssl" ];
      };
    "either 1.5.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "either";
        version = "1.5.3";
        edition = "2015";
        sha256 = "040fgh0jahqra9ascwb986zgll1ss88ky9bfvn0zfay42zsyz83n";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
    "encode_unicode 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "encode_unicode";
        version = "0.3.6";
        edition = "2015";
        sha256 = "1d87mrirdz691sffc6ghy6ahf3zrs2iynrwzjibbjkb9307fm2dg";
        authors = [
          "Torbjørn Birch Moltu <t.b.moltu@lyse.net>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "env_logger 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "env_logger";
        version = "0.7.1";
        edition = "2018";
        sha256 = "1l2ln6l21z2zs4s93svysq3bq0mj9npbwgkwm4540y6dl5chhpak";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "atty" = {
            packageId = "atty 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "humantime" = {
            packageId = "humantime 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "log" = {
            packageId = "log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "std" ];
          };
          "regex" = {
            packageId = "regex 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "termcolor" = {
            packageId = "termcolor 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "termcolor" "atty" "humantime" "regex" ];
        };
        resolvedDefaultFeatures = [ "atty" "default" "humantime" "regex" "termcolor" ];
      };
    "failure 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "failure";
        version = "0.1.6";
        edition = "2015";
        sha256 = "09qsxzrxzqz7h76sd5klfk6nq407way77j898519ll7pr5yk3j65";
        authors = [
          "Without Boats <boats@mozilla.com>"
        ];
        dependencies = {
          "backtrace" = {
            packageId = "backtrace 0.3.40 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "failure_derive" = {
            packageId = "failure_derive 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "std" "derive" ];
          "derive" = [ "failure_derive" ];
          "std" = [ "backtrace" ];
        };
        resolvedDefaultFeatures = [ "backtrace" "default" "derive" "failure_derive" "std" ];
      };
    "failure_derive 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "failure_derive";
        version = "0.1.6";
        edition = "2015";
        sha256 = "00ps2s591hh2sicdv3ix6gv3qf39n5qf67q0mjff90ha8hvsykpj";
        procMacro = true;
        authors = [
          "Without Boats <woboats@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = "syn 1.0.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "synstructure" = "synstructure 0.12.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "filetime 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "filetime";
        version = "0.2.7";
        edition = "2018";
        sha256 = "10rd6xpgjmcjnlhi02g0awirwn537andfq79jgz7p0cc64gc5mny";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "redox_syscall" = {
            packageId = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "fileapi" "minwindef" "winbase" ];
          };
        };
        features = {
        };
      };
    "finalfusion 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "finalfusion";
        version = "0.11.0";
        edition = "2018";
        sha256 = "0pki8lx0nhigii4pzp1v2hzq1v42m6z8npq6bkvrxp741301dsbx";
        authors = [
          "Daniël de Kok <me@danieldk.eu>"
          "Sebastian Pütz <sebastian.puetz@student.uni-tuebingen.de>"
        ];
        dependencies = {
          "byteorder" = "byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "fnv" = "fnv 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "itertools" = "itertools 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "memmap" = "memmap 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "ndarray" = "ndarray 0.13.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "ordered-float" = "ordered-float 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand" = "rand 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_xorshift" = "rand_xorshift 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "reductive" = "reductive 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "serde" = {
            packageId = "serde 1.0.102 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "derive" ];
          };
          "toml" = "toml 0.5.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "finalfusion-utils 0.10.0 (path+file:///home/daniel/git/finalfusion-utils)"
      = rec {
        crateName = "finalfusion-utils";
        version = "0.10.0";
        edition = "2018";
        src = (builtins.filterSource sourceFilter ./.);
        authors = [
          "Daniël de Kok <me@danieldk.eu>"
        ];
        dependencies = {
          "clap" = "clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "env_logger" = "env_logger 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "failure" = "failure 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "finalfusion" = "finalfusion 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "indicatif" = "indicatif 0.12.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "ndarray" = "ndarray 0.13.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "num_cpus" = "num_cpus 1.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "openblas-src" = {
            packageId = "openblas-src 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "rayon" = "rayon 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "reductive" = "reductive 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "stdinout" = "stdinout 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "toml" = "toml 0.5.5 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "intel-mkl" = [ "opq" "reductive/intel-mkl" ];
          "netlib" = [ "opq" "reductive/netlib" ];
          "openblas" = [ "opq" "reductive/openblas" "openblas-src/system" ];
        };
        resolvedDefaultFeatures = [ "default" "intel-mkl" "netlib" "openblas" "openblas-src" "opq" ];
      };
    "fnv 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "fnv";
        version = "1.0.6";
        edition = "2015";
        sha256 = "128mlh23y3gg6ag5h8iiqlcbl59smisdzraqy88ldrf75kbw27ip";
        libPath = "lib.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
        };
      };
    "fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "fuchsia-cprng";
        version = "0.1.1";
        edition = "2018";
        sha256 = "07apwv9dj716yjlcj29p94vkqn5zmfh7hlrqvrjx3wzshphc95h9";
        authors = [
          "Erick Tryzelaar <etryzelaar@google.com>"
        ];
        features = {
        };
      };
    "getrandom 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "getrandom";
        version = "0.1.13";
        edition = "2018";
        sha256 = "0js1vkdrqy94vfn39p8i93zcr1r4mjbvy78dbrbx7s8rd6xl33md";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = target."unix";
          };
          "wasi" = {
            packageId = "wasi 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "wasi");
          };
        };
        features = {
          "rustc-dep-of-std" = [ "compiler_builtins" "core" ];
          "test-in-browser" = [ "wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "hermit-abi 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "hermit-abi";
        version = "0.1.3";
        edition = "2015";
        sha256 = "13lvclqpdpa2jk8kblja8jmbq0gj80rlmc5x8kiqk91h278j2r2s";
        authors = [
          "Stefan Lankes"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins/rustc-dep-of-std" "libc/rustc-dep-of-std" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "humantime 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "humantime";
        version = "1.3.0";
        edition = "2015";
        sha256 = "1y7q207gg33jr5rnlnb0h08k00i54g9fypf3drjk8g1sq2swn92r";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
        ];
        dependencies = {
          "quick-error" = "quick-error 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "indicatif 0.12.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "indicatif";
        version = "0.12.0";
        edition = "2018";
        sha256 = "1wc025y15b5fwqgb9ryfglrry3fpd53x52na9l1a6piqy2qz3q0i";
        authors = [
          "Armin Ronacher <armin.ronacher@active-4.com>"
        ];
        dependencies = {
          "console" = "console 0.9.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "lazy_static" = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "number_prefix" = "number_prefix 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "regex" = {
            packageId = "regex 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "std" ];
          };
        };
        features = {
          "with_rayon" = [ "rayon" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "intel-mkl-src 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "intel-mkl-src";
        version = "0.4.1";
        edition = "2018";
        sha256 = "05rhxr1xznwksdvy3xskf2lz8z38yf0ba1s76m67rjpvgqc7i15d";
        authors = [
          "Toshiki Teramura <toshiki.teramura@gmail.com>"
        ];
        buildDependencies = {
          "curl" = "curl 0.4.25 (registry+https://github.com/rust-lang/crates.io-index)";
          "failure" = "failure 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "pkg-config" = "pkg-config 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)";
          "tar" = "tar 0.4.26 (registry+https://github.com/rust-lang/crates.io-index)";
          "xz2" = "xz2 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "itertools 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "itertools";
        version = "0.8.1";
        edition = "2015";
        sha256 = "0qwv2im4nwz78cac181k50gw5v9hxpfqj6a86kchh6h990szlq5c";
        authors = [
          "bluss"
        ];
        dependencies = {
          "either" = {
            packageId = "either 1.5.3 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
    "lapack-src 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "lapack-src";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0kpaif96c4zx1da1fn3rh59s7mzzn3gk6lx3j9kl2b6kfm7wjpip";
        authors = [
          "Ivan Ukhov <ivan.ukhov@gmail.com>"
          "Stefan Kroboth <stefan.kroboth@gmail.com>"
          "Toshiki Teramura <toshiki.teramura@gmail.com>"
        ];
        dependencies = {
          "intel-mkl-src" = {
            packageId = "intel-mkl-src 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "netlib-src" = {
            packageId = "netlib-src 0.7.4 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "openblas-src" = {
            packageId = "openblas-src 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "accelerate" = [ "accelerate-src" ];
          "intel-mkl" = [ "intel-mkl-src" ];
          "netlib" = [ "netlib-src" ];
          "openblas" = [ "openblas-src" ];
        };
        resolvedDefaultFeatures = [ "intel-mkl" "intel-mkl-src" "netlib" "netlib-src" "openblas" "openblas-src" ];
      };
    "lapacke 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "lapacke";
        version = "0.2.0";
        edition = "2015";
        sha256 = "0dwc4n7m7pi3i3jiis7ajkl4sjax57lvgvajhq30m59bzyhxzlid";
        authors = [
          "Ivan Ukhov <ivan.ukhov@gmail.com>"
        ];
        dependencies = {
          "lapacke-sys" = "lapacke-sys 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
          "num-complex" = {
            packageId = "num-complex 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
        };
      };
    "lapacke-sys 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "lapacke-sys";
        version = "0.1.4";
        edition = "2015";
        sha256 = "0xqdqqy745g2ryidqhqqvbic0qkv1jisl7f2b8zv94xjyxlp7x4f";
        authors = [
          "Ivan Ukhov <ivan.ukhov@gmail.com>"
        ];
        dependencies = {
          "libc" = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "lazy_static";
        version = "1.4.0";
        edition = "2015";
        sha256 = "13h6sdghdcy7vcqsm2gasfw3qg7ssa0fl3sw7lq6pdkbk52wbyfr";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        features = {
          "spin_no_std" = [ "spin" ];
        };
      };
    "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "libc";
        version = "0.2.65";
        edition = "2015";
        sha256 = "0nx1n3xvwj2ikw1d6v17154jx2sb9sgrv6fwbnq79c614a3mhmad";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "align" "rustc-std-workspace-core" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "libz-sys 1.0.25 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "libz-sys";
        version = "1.0.25";
        edition = "2015";
        sha256 = "195jzg8mgjbvmkbpx1rzkzrqm0g2fdivk79v44c9lzl64r3f9fym";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "libc" = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "cc" = "cc 1.0.47 (registry+https://github.com/rust-lang/crates.io-index)";
          "pkg-config" = "pkg-config 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)";
          "vcpkg" = {
            packageId = "vcpkg 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."env" == "msvc");
          };
        };
        features = {
        };
      };
    "log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "log";
        version = "0.4.8";
        edition = "2015";
        sha256 = "0wvzzzcn89dai172rrqcyz06pzldyyy0lf0w71csmn206rdpnb15";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "cfg-if" = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "kv_unstable_sval" = [ "kv_unstable" "sval/fmt" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "lzma-sys 0.1.15 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "lzma-sys";
        version = "0.1.15";
        edition = "2018";
        sha256 = "0xkzf5kb9n0djjxbnnynqsm0xad6rz6n1h7cjpf8sgpr6rcs278q";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "libc" = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "cc" = "cc 1.0.47 (registry+https://github.com/rust-lang/crates.io-index)";
          "pkg-config" = "pkg-config 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "matrixmultiply 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "matrixmultiply";
        version = "0.2.3";
        edition = "2015";
        sha256 = "19ngadpzg6wg43ga2zq4sqpq1m7cj4r75y8alchqzbx3s1s5rii3";
        authors = [
          "bluss"
          "R. Janis Goldschmidt"
        ];
        dependencies = {
          "rawpointer" = "rawpointer 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "memchr 2.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "memchr";
        version = "2.2.1";
        edition = "2015";
        sha256 = "1mj5z8lhz6jbapslpq8a39pwcsl1p0jmgp7wgcj7nv4pcqhya7a0";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
    "memmap 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "memmap";
        version = "0.7.0";
        edition = "2015";
        sha256 = "1j1rz5p4vh3i5p6rxy620wypj36xc7qarw6dj3353ym67zfaml18";
        authors = [
          "Dan Burkert <dan@danburkert.com>"
        ];
        dependencies = {
          "libc" = {
            packageId = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "basetsd" "handleapi" "memoryapi" "minwindef" "std" "sysinfoapi" ];
          };
        };
        features = {
        };
      };
    "memoffset 0.5.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "memoffset";
        version = "0.5.3";
        edition = "2015";
        sha256 = "1200gjmjqjh3dl78ndb7b833hmy5s0ly1zcgxcrzjmg95bn39c0s";
        authors = [
          "Gilad Naaman <gilad.naaman@gmail.com>"
        ];
        buildDependencies = {
          "rustc_version" = "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "ndarray 0.13.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ndarray";
        version = "0.13.0";
        edition = "2018";
        sha256 = "056bvjjisdbsgwb354ckm4qhgddcdal4wbxdi9yqyagmn0zbmqpq";
        authors = [
          "bluss"
          "Jim Turner"
        ];
        dependencies = {
          "approx" = {
            packageId = "approx 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "blas-src" = {
            packageId = "blas-src 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          };
          "cblas-sys" = {
            packageId = "cblas-sys 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          };
          "itertools" = {
            packageId = "itertools 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "matrixmultiply" = "matrixmultiply 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "num-complex" = "num-complex 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "num-integer" = "num-integer 0.1.41 (registry+https://github.com/rust-lang/crates.io-index)";
          "num-traits" = "num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "rawpointer" = "rawpointer 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "rayon" = {
            packageId = "rayon 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "blas" = [ "cblas-sys" "blas-src" ];
          "docs" = [ "approx" "serde" "rayon" ];
          "serde-1" = [ "serde" ];
          "test" = [ "test-blas-openblas-sys" ];
          "test-blas-openblas-sys" = [ "blas" ];
        };
        resolvedDefaultFeatures = [ "approx" "blas" "blas-src" "cblas-sys" "rayon" ];
      };
    "ndarray-linalg 0.12.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ndarray-linalg";
        version = "0.12.0";
        edition = "2018";
        sha256 = "1y0c3c0qf0k903mmpsbkmazb9c3wnmrbjkf9lcaki3qmh99nrg9c";
        authors = [
          "Toshiki Teramura <toshiki.teramura@gmail.com>"
        ];
        dependencies = {
          "blas-src" = {
            packageId = "blas-src 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "cauchy" = "cauchy 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "lapack-src" = {
            packageId = "lapack-src 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "lapacke" = "lapacke 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "ndarray" = {
            packageId = "ndarray 0.13.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "blas" ];
          };
          "num-complex" = "num-complex 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          "num-traits" = "num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand" = "rand 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "intel-mkl" = [ "lapack-src/intel-mkl" "blas-src/intel-mkl" ];
          "netlib" = [ "lapack-src/netlib" "blas-src/netlib" ];
          "openblas" = [ "lapack-src/openblas" "blas-src/openblas" ];
          "openblas-static" = [ "openblas" "openblas-src" ];
          "serde-1" = [ "ndarray/serde-1" "num-complex/serde" ];
          "static" = [ "openblas-static" ];
        };
        resolvedDefaultFeatures = [ "default" "intel-mkl" "netlib" "openblas" ];
      };
    "netlib-src 0.7.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "netlib-src";
        version = "0.7.4";
        edition = "2015";
        sha256 = "1jb0h1w1qqb68bfy2gjmi9lgfbydn5fwx179qjzllsdhd63d6san";
        authors = [
          "Corey Richardson <corey@octayn.net>"
          "Ivan Ukhov <ivan.ukhov@gmail.com>"
          "Mason Smith <masonium@gmail.com>"
          "Phil Ruffwind <rf@rufflewind.com>"
        ];
        buildDependencies = {
          "cmake" = "cmake 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "cblas" "lapacke" "tmg" ];
        };
        resolvedDefaultFeatures = [ "cblas" "default" "lapacke" "tmg" ];
      };
    "num-complex 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "num-complex";
        version = "0.2.3";
        edition = "2015";
        sha256 = "1l8gwn4cqhx77wzhzslwxhryrr5h4vsv19ys8wr5xb1g332805m9";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "num-traits" = {
            packageId = "num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "rand" = {
            packageId = "rand 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          };
          "serde" = {
            packageId = "serde 1.0.102 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          };
        };
        buildDependencies = {
          "autocfg" = "autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-traits/i128" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "rand" "serde" "std" ];
      };
    "num-integer 0.1.41 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "num-integer";
        version = "0.1.41";
        edition = "2015";
        sha256 = "1y45nh9xlp2dra9svb1wfsy65fysm3k1w4m8jynywccq645yixid";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "num-traits" = {
            packageId = "num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        buildDependencies = {
          "autocfg" = "autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" ];
          "i128" = [ "num-traits/i128" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "num-traits";
        version = "0.2.8";
        edition = "2015";
        sha256 = "1mnlmy35n734n9xlq0qkfbgzz33x09a1s4rfj30p1976p09b862v";
        authors = [
          "The Rust Project Developers"
        ];
        buildDependencies = {
          "autocfg" = "autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "num_cpus 1.11.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "num_cpus";
        version = "1.11.0";
        edition = "2015";
        sha256 = "15j67mvvsl5yv0cp99c122lpz8cgx7gn8q7llwfnd4gvadh7dv57";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = {
          "hermit-abi" = {
            packageId = "hermit-abi 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (((target."arch" == "x86_64") || (target."arch" == "aarch64")) && (target."os" == "hermit"));
          };
          "libc" = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "number_prefix 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "number_prefix";
        version = "0.3.0";
        edition = "2015";
        sha256 = "1dpvqrrvv87wx662iv1gjjjqz6dgyqfw4ywg9slrvpsa9qykxdxa";
        authors = [
          "Benjamin Sago <ogham@bsago.me>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "openblas-src 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "openblas-src";
        version = "0.7.0";
        edition = "2015";
        sha256 = "0if0pvs1s99daqx3wc77981gl80wkdpjxwqrvimilrnn37jmxfws";
        authors = [
          "Corey Richardson <corey@octayn.net>"
          "Ivan Ukhov <ivan.ukhov@gmail.com>"
          "Ken Elkabany <ken@elkabany.com>"
          "Steve Harris <steveOfAR@gmail.com>"
        ];
        features = {
          "default" = [ "cblas" "lapacke" ];
        };
        resolvedDefaultFeatures = [ "cblas" "default" "lapacke" "system" ];
      };
    "openssl-probe 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "openssl-probe";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1a89fznx26vvaxyrxdvgf6iwai5xvs6xjvpjin68fgvrslv6n15a";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
        };
      };
    "openssl-sys 0.9.52 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "openssl-sys";
        version = "0.9.52";
        edition = "2015";
        sha256 = "1vaa2syd87d3sfiwg9s2d46sz5gfn7pdps521n859prlf80bfwgb";
        build = "build/main.rs";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Steven Fackler <sfackler@gmail.com>"
        ];
        dependencies = {
          "libc" = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        buildDependencies = {
          "autocfg" = "autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "cc" = "cc 1.0.47 (registry+https://github.com/rust-lang/crates.io-index)";
          "pkg-config" = "pkg-config 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)";
          "vcpkg" = {
            packageId = "vcpkg 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."env" == "msvc");
          };
        };
        features = {
          "vendored" = [ "openssl-src" ];
        };
      };
    "ordered-float 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ordered-float";
        version = "1.0.2";
        edition = "2015";
        sha256 = "1bwjh1gkh2n6zqb2q1a04gkskgz3hxbj3w7fvhx6yd7l0nbmbd1b";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
          "Matt Brubeck <mbrubeck@limpet.net>"
        ];
        dependencies = {
          "num-traits" = {
            packageId = "num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "std" ];
          "std" = [ "num-traits/std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "pkg-config 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "pkg-config";
        version = "0.3.17";
        edition = "2015";
        sha256 = "0f83cnls5a6y97k8b3a54xhmyrjybj29qq6rwvz450qdsy5ff8vj";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
        };
      };
    "ppv-lite86 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ppv-lite86";
        version = "0.2.6";
        edition = "2018";
        sha256 = "1mlbp0713frbyvcbjmc5vl062b0vr58agkv3ar2qqi5plgy9b7ib";
        authors = [
          "The CryptoCorrosion Contributors"
        ];
        features = {
          "default" = [ "std" "simd" ];
        };
        resolvedDefaultFeatures = [ "simd" "std" ];
      };
    "proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "proc-macro2";
        version = "1.0.6";
        edition = "2018";
        sha256 = "1l56ss9ip8cg6764cpi9y8dv7nsyqf2i4hb7sn29zx61n03jr81z";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "unicode-xid" = "unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
    "quick-error 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "quick-error";
        version = "1.2.2";
        edition = "2015";
        sha256 = "192a3adc5phgpibgqblsdx1b421l5yg9bjbmv552qqq9f37h60k5";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
          "Colin Kiegel <kiegel@gmx.de>"
        ];
        features = {
        };
      };
    "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "quote";
        version = "1.0.2";
        edition = "2018";
        sha256 = "0r7030w7dymarn92gjgm02hsm04fwsfs6f1l20wdqiyrm9z8rs5q";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = {
            packageId = "proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
        };
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
    "rand 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand";
        version = "0.5.6";
        edition = "2015";
        sha256 = "04f1gydiia347cx24n5cw4v21fhh9yga7dw739z4jsxzls2ss8w8";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "cloudabi" = {
            packageId = "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = (target."os" == "cloudabi");
          };
          "fuchsia-cprng" = {
            packageId = "fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = (target."os" == "fuchsia");
          };
          "libc" = {
            packageId = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = target."unix";
          };
          "rand_core" = {
            packageId = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = target."windows";
            features = [ "minwindef" "ntsecapi" "profileapi" "winnt" ];
          };
        };
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "i128_support" ];
          "serde1" = [ "serde" "serde_derive" "rand_core/serde1" ];
          "std" = [ "rand_core/std" "alloc" "libc" "winapi" "cloudabi" "fuchsia-cprng" ];
        };
        resolvedDefaultFeatures = [ "alloc" "cloudabi" "default" "fuchsia-cprng" "libc" "std" "winapi" ];
      };
    "rand 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand";
        version = "0.7.2";
        edition = "2018";
        sha256 = "1f53047g63b9kyyx1k8wgwzspk4n96w2n2h1a9848ggl9y9h0ik6";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "getrandom" = {
            packageId = "getrandom 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)";
            rename = "getrandom_package";
            optional = true;
          };
          "libc" = {
            packageId = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = target."unix";
          };
          "rand_chacha" = {
            packageId = "rand_chacha 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = (!(target."os" == "emscripten"));
          };
          "rand_core" = "rand_core 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_hc" = {
            packageId = "rand_hc 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "emscripten");
          };
          "rand_pcg" = {
            packageId = "rand_pcg 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "getrandom" = [ "getrandom_package" "rand_core/getrandom" ];
          "nightly" = [ "simd_support" ];
          "simd_support" = [ "packed_simd" ];
          "small_rng" = [ "rand_pcg" ];
          "std" = [ "rand_core/std" "rand_chacha/std" "alloc" "getrandom" ];
          "stdweb" = [ "getrandom_package/stdweb" ];
          "wasm-bindgen" = [ "getrandom_package/wasm-bindgen" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "getrandom" "getrandom_package" "rand_pcg" "small_rng" "std" ];
      };
    "rand_chacha 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_chacha";
        version = "0.2.1";
        edition = "2018";
        sha256 = "0zpp3wmxhhmripb6bywhzhx5rfwl4dfbny85hpalwdj0sncv0p0k";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
          "The CryptoCorrosion Contributors"
        ];
        dependencies = {
          "c2-chacha" = {
            packageId = "c2-chacha 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "simd" ];
          };
          "rand_core" = "rand_core 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "std" "simd" ];
          "std" = [ "c2-chacha/std" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_core";
        version = "0.3.1";
        edition = "2015";
        sha256 = "0q0ssgpj9x5a6fda83nhmfydy7a6c0wvxm0jhncsmjx8qp8gw91m";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "rand_core" = "rand_core 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "alloc" = [ "rand_core/alloc" ];
          "default" = [ "std" ];
          "serde1" = [ "rand_core/serde1" ];
          "std" = [ "rand_core/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
    "rand_core 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_core";
        version = "0.4.2";
        edition = "2015";
        sha256 = "18zpzwn4bl7lp9f36iacy8mvdnfrhfmzsl35gmln98dcindff2ly";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        features = {
          "serde1" = [ "serde" "serde_derive" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
    "rand_core 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_core";
        version = "0.5.1";
        edition = "2018";
        sha256 = "19qfnh77bzz0x2gfsk91h0gygy0z1s5l3yyc2j91gmprq60d6s3r";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "getrandom" = {
            packageId = "getrandom 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "serde1" = [ "serde" ];
          "std" = [ "alloc" "getrandom" "getrandom/std" ];
        };
        resolvedDefaultFeatures = [ "alloc" "getrandom" "std" ];
      };
    "rand_hc 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_hc";
        version = "0.2.0";
        edition = "2018";
        sha256 = "0592q9kqcna9aiyzy6vp3fadxkkbpfkmi2cnkv48zhybr0v2yf01";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "rand_core" = "rand_core 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "rand_pcg 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_pcg";
        version = "0.2.1";
        edition = "2018";
        sha256 = "04yzci1dbsp2n404iyhzi4dk50cplfw8g9si4xibxdcz062nbmh0";
        authors = [
          "The Rand Project Developers"
        ];
        dependencies = {
          "rand_core" = "rand_core 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "serde1" = [ "serde" ];
        };
      };
    "rand_xorshift 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rand_xorshift";
        version = "0.2.0";
        edition = "2018";
        sha256 = "14lj3xzbaxc5sh7kn0jlcbik1dp2jw8dyp6xwjdi1y9jgia07ww3";
        authors = [
          "The Rand Project Developers"
          "The Rust Project Developers"
        ];
        dependencies = {
          "rand_core" = "rand_core 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "serde1" = [ "serde" ];
        };
      };
    "rawpointer 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rawpointer";
        version = "0.2.1";
        edition = "2015";
        sha256 = "01njdh2jkswv4lhvi4917pfga2ldg1v7hr47g2icipyxnyjdd7q7";
        authors = [
          "bluss"
        ];
        features = {
        };
      };
    "rayon 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rayon";
        version = "1.2.0";
        edition = "2015";
        sha256 = "171ma39i8mzfpxndxpy8b6b7bdfxl9pmn3yh0jyvmh204nml2xfk";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = {
          "crossbeam-deque" = "crossbeam-deque 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "either" = {
            packageId = "either 1.5.3 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "rayon-core" = "rayon-core 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "rayon-core 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rayon-core";
        version = "1.6.0";
        edition = "2015";
        sha256 = "1gisjwv2l7mcvj9h1iwzp7z1c7sjs3kqsi3zqg9mw50jkc6lbvxl";
        authors = [
          "Niko Matsakis <niko@alum.mit.edu>"
          "Josh Stone <cuviper@gmail.com>"
        ];
        dependencies = {
          "crossbeam-deque" = "crossbeam-deque 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "crossbeam-queue" = "crossbeam-queue 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "crossbeam-utils" = "crossbeam-utils 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "lazy_static" = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "num_cpus" = "num_cpus 1.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "redox_syscall";
        version = "0.1.56";
        edition = "2015";
        sha256 = "0jcp8nd947zcy938bz09pzlmi3vyxfdzg92pjxdvvk0699vwcc26";
        libName = "syscall";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        features = {
        };
      };
    "reductive 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "reductive";
        version = "0.4.0";
        edition = "2018";
        sha256 = "0ifm6p5193zclgjja86y81hr8rbfmmj01nf7xxwnp4xq7jbchrxd";
        authors = [
          "Daniël de Kok <me@danieldk.eu>"
        ];
        dependencies = {
          "log" = "log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "ndarray" = {
            packageId = "ndarray 0.13.0 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "approx" "rayon" ];
          };
          "ndarray-linalg" = {
            packageId = "ndarray-linalg 0.12.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "num-traits" = "num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
          "ordered-float" = "ordered-float 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand" = {
            packageId = "rand 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "small_rng" ];
          };
          "rand_core" = "rand_core 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
          "rand_xorshift" = "rand_xorshift 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "rayon" = "rayon 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "intel-mkl" = [ "opq-train" "ndarray-linalg/intel-mkl" ];
          "netlib" = [ "opq-train" "ndarray-linalg/netlib" ];
          "openblas" = [ "opq-train" "ndarray-linalg/openblas" ];
        };
        resolvedDefaultFeatures = [ "default" "intel-mkl" "ndarray-linalg" "netlib" "openblas" "opq-train" ];
      };
    "regex 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "regex";
        version = "1.3.1";
        edition = "2015";
        sha256 = "0508b01q7iwky5gzp1cc3lpz6al1qam8skgcvkfgxr67nikiz7jn";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = {
          "aho-corasick" = {
            packageId = "aho-corasick 0.7.6 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "memchr" = {
            packageId = "memchr 2.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
          "regex-syntax" = {
            packageId = "regex-syntax 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "thread_local" = {
            packageId = "thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "std" "perf" "unicode" ];
          "perf" = [ "perf-cache" "perf-dfa" "perf-inline" "perf-literal" ];
          "perf-cache" = [ "thread_local" ];
          "perf-literal" = [ "aho-corasick" "memchr" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
          "unicode-age" = [ "regex-syntax/unicode-age" ];
          "unicode-bool" = [ "regex-syntax/unicode-bool" ];
          "unicode-case" = [ "regex-syntax/unicode-case" ];
          "unicode-gencat" = [ "regex-syntax/unicode-gencat" ];
          "unicode-perl" = [ "regex-syntax/unicode-perl" ];
          "unicode-script" = [ "regex-syntax/unicode-script" ];
          "unicode-segment" = [ "regex-syntax/unicode-segment" ];
          "unstable" = [ "pattern" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "aho-corasick" "default" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "thread_local" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
      };
    "regex-syntax 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "regex-syntax";
        version = "0.6.12";
        edition = "2015";
        sha256 = "1lqhddhwzpgq8zfkxhm241n7g4m3yc11fb4098dkgawbxvybr53v";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "unicode" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
        };
        resolvedDefaultFeatures = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
      };
    "rustc-demangle 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rustc-demangle";
        version = "0.1.16";
        edition = "2015";
        sha256 = "0zmn448d0f898ahfkz7cir0fi0vk84dabjpw84mk6a1r6nf9vzmi";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
    "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rustc_version";
        version = "0.2.3";
        edition = "2015";
        sha256 = "0rgwzbgs3i9fqjm1p4ra3n7frafmpwl29c8lw85kv1rxn7n2zaa7";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        dependencies = {
          "semver" = "semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "schannel 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "schannel";
        version = "0.1.16";
        edition = "2015";
        sha256 = "1qf391890l43lzkyadhrwrlkpryyjmral75x9xj664vi3asl854g";
        authors = [
          "Steven Fackler <sfackler@gmail.com>"
          "Steffen Butzer <steffen.butzer@outlook.com>"
        ];
        dependencies = {
          "lazy_static" = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "lmcons" "minschannel" "securitybaseapi" "schannel" "sspi" "sysinfoapi" "timezoneapi" "winbase" "wincrypt" "winerror" ];
          };
        };
        features = {
        };
      };
    "scopeguard 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "scopeguard";
        version = "1.0.0";
        edition = "2015";
        sha256 = "15vrix0jx3i4naqnjswddzn4m036krrv71a8vkh3b1zq4hxmrb0q";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
    "semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "semver";
        version = "0.9.0";
        edition = "2015";
        sha256 = "0azak2lb2wc36s3x15az886kck7rpnksrw14lalm157rg9sc9z63";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
          "The Rust Project Developers"
        ];
        dependencies = {
          "semver-parser" = "semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "ci" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "semver-parser";
        version = "0.7.0";
        edition = "2015";
        sha256 = "1da66c8413yakx0y15k8c055yna5lyb6fr0fw9318kdwkrk5k12h";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
        ];
        features = {
        };
      };
    "serde 1.0.102 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "serde";
        version = "1.0.102";
        edition = "2015";
        sha256 = "0drxlnfbwg6fhmy15hcndqxlsidq8alcs43wnj2gsh67fidcbi5y";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "serde_derive" = {
            packageId = "serde_derive 1.0.102 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          };
        };
        features = {
          "default" = [ "std" ];
          "derive" = [ "serde_derive" ];
        };
        resolvedDefaultFeatures = [ "default" "derive" "serde_derive" "std" ];
      };
    "serde_derive 1.0.102 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "serde_derive";
        version = "1.0.102";
        edition = "2015";
        sha256 = "01fgxmywszj2zvdsq9ypn8sp99f2mr3hb95y0yz0fxad3y9zdnp7";
        procMacro = true;
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = {
            packageId = "syn 1.0.7 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "visit" ];
          };
        };
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "socket2 0.3.11 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "socket2";
        version = "0.3.11";
        edition = "2018";
        sha256 = "06v07j2i8miv484vdgbj0k6npk6115x756yi0x3gvd3424nj3yjx";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "cfg-if" = {
            packageId = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."unix" || (target."os" == "redox"));
          };
          "libc" = {
            packageId = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."unix" || (target."os" == "redox"));
          };
          "redox_syscall" = {
            packageId = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "handleapi" "ws2def" "ws2ipdef" "ws2tcpip" "minwindef" ];
          };
        };
        features = {
        };
      };
    "stdinout 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "stdinout";
        version = "0.4.0";
        edition = "2015";
        sha256 = "197vgpiml8img4n1dgpa4gx7qi8kf87y3gbhlndqp72rifhk7jdd";
        authors = [
          "Daniël de Kok <me@danieldk.eu>"
        ];
        features = {
        };
      };
    "strsim 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "strsim";
        version = "0.8.0";
        edition = "2015";
        sha256 = "0d3jsdz22wgjyxdakqnvdgmwjdvkximz50d9zfk4qlalw635qcvy";
        authors = [
          "Danny Guo <dannyguo91@gmail.com>"
        ];
        features = {
        };
      };
    "syn 1.0.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "syn";
        version = "1.0.7";
        edition = "2018";
        sha256 = "1y68sh9hpcrc8cbc3kkffj7gr7ay2b1dh6cl0b3ma5qv3x6bahk2";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = {
          "proc-macro2" = {
            packageId = "proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          };
          "quote" = {
            packageId = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          };
          "unicode-xid" = "unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "extra-traits" "parsing" "printing" "proc-macro" "quote" "visit" ];
      };
    "synstructure 0.12.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "synstructure";
        version = "0.12.2";
        edition = "2018";
        sha256 = "1vi45h7msb947g853smg41r92zrf68gxvjv5xr2khp4hyzhq0bk9";
        authors = [
          "Nika Layzell <nika@thelayzells.com>"
        ];
        dependencies = {
          "proc-macro2" = "proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)";
          "quote" = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          "syn" = {
            packageId = "syn 1.0.7 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "visit" "extra-traits" ];
          };
          "unicode-xid" = "unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "tar 0.4.26 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "tar";
        version = "0.4.26";
        edition = "2018";
        sha256 = "1rmv889ibi1zllqpib5ywa2gdqsx4qg2l9qxr7skk4j5spcsy7lp";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "filetime" = "filetime 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)";
          "libc" = {
            packageId = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."unix";
          };
          "redox_syscall" = {
            packageId = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (target."os" == "redox");
          };
          "xattr" = {
            packageId = "xattr 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = target."unix";
          };
        };
        features = {
          "default" = [ "xattr" ];
        };
        resolvedDefaultFeatures = [ "default" "xattr" ];
      };
    "termcolor 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "termcolor";
        version = "1.0.5";
        edition = "2015";
        sha256 = "16266x431hbkmvyh0pv4yn7wm2kagicqaq6hy4fabn93c08sx0gp";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "wincolor" = {
            packageId = "wincolor 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
          };
        };
        features = {
        };
      };
    "termios 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "termios";
        version = "0.3.1";
        edition = "2015";
        sha256 = "1h0fwglrhay85fkbl05ym5gh8hxzl7pyz0a51zfmmngxrf7823c2";
        authors = [
          "David Cuddeback <david.cuddeback@gmail.com>"
        ];
        dependencies = {
          "libc" = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "textwrap 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "textwrap";
        version = "0.11.0";
        edition = "2015";
        sha256 = "0s25qh49n7kjayrdj4q3v0jk0jc6vy88rdw0bvgfxqlscpqpxi7d";
        authors = [
          "Martin Geisler <martin@geisler.net>"
        ];
        dependencies = {
          "unicode-width" = "unicode-width 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "thread_local";
        version = "0.3.6";
        edition = "2015";
        sha256 = "02rksdwjmz2pw9bmgbb4c0bgkbq5z6nvg510sq1s6y2j1gam0c7i";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = {
          "lazy_static" = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "toml 0.5.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "toml";
        version = "0.5.5";
        edition = "2018";
        sha256 = "0ndga9f267v6205ij9z2b7mfhdyi4p5g6kla792gn5ndjqr0lrbq";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "serde" = "serde 1.0.102 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "preserve_order" = [ "indexmap" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "unicode-width 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-width";
        version = "0.1.6";
        edition = "2015";
        sha256 = "1mss965j7d8pv7z7zg6qfkcb7lyhxkxvbh8akzr4xxxx3vzazwsi";
        authors = [
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "std" "core" "compiler_builtins" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-xid";
        version = "0.2.0";
        edition = "2015";
        sha256 = "1c85gb3p3qhbjvfyjb31m06la4f024jx319k10ig7n47dz2fk8v7";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "vcpkg 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "vcpkg";
        version = "0.2.7";
        edition = "2015";
        sha256 = "1lwykbbscbdy4nhrfidgg3rk2xw9cvx5672sx1c97wm8y3vjpcd9";
        authors = [
          "Jim McGrath <jimmc2@gmail.com>"
        ];
        features = {
        };
      };
    "vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "vec_map";
        version = "0.8.1";
        edition = "2015";
        sha256 = "1jj2nrg8h3l53d43rwkpkikq5a5x15ms4rf1rw92hp5lrqhi8mpi";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Jorge Aparicio <japaricious@gmail.com>"
          "Alexis Beingessner <a.beingessner@gmail.com>"
          "Brian Anderson <>"
          "tbu- <>"
          "Manish Goregaokar <>"
          "Aaron Turon <aturon@mozilla.com>"
          "Adolfo Ochagavía <>"
          "Niko Matsakis <>"
          "Steven Fackler <>"
          "Chase Southwood <csouth3@illinois.edu>"
          "Eduard Burtescu <>"
          "Florian Wilkens <>"
          "Félix Raimundo <>"
          "Tibor Benke <>"
          "Markus Siemens <markus@m-siemens.de>"
          "Josh Branchaud <jbranchaud@gmail.com>"
          "Huon Wilson <dbau.pp@gmail.com>"
          "Corey Farwell <coref@rwell.org>"
          "Aaron Liblong <>"
          "Nick Cameron <nrc@ncameron.org>"
          "Patrick Walton <pcwalton@mimiga.net>"
          "Felix S Klock II <>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
          "Sean McArthur <sean.monstar@gmail.com>"
          "Vadim Petrochenkov <>"
        ];
        features = {
          "eders" = [ "serde" ];
        };
      };
    "wasi 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "wasi";
        version = "0.7.0";
        edition = "2018";
        sha256 = "1lqknxy8x9mrsy0pna6xlwzypbhli73nbai9gmin5f4z1ghlng25";
        authors = [
          "The Cranelift Project Developers"
        ];
        features = {
          "default" = [ "alloc" ];
          "rustc-dep-of-std" = [ "compiler_builtins" "core" "rustc-std-workspace-alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" ];
      };
    "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi";
        version = "0.3.8";
        edition = "2015";
        sha256 = "084ialbgww1vxry341fmkg5crgpvab3w52ahx1wa54yqjgym0vxs";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = {
          "winapi-i686-pc-windows-gnu" = {
            packageId = "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (stdenv.hostPlatform.config == "i686-pc-windows-gnu");
          };
          "winapi-x86_64-pc-windows-gnu" = {
            packageId = "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = (stdenv.hostPlatform.config == "x86_64-pc-windows-gnu");
          };
        };
        features = {
          "debug" = [ "impl-debug" ];
        };
        resolvedDefaultFeatures = [ "basetsd" "consoleapi" "errhandlingapi" "fileapi" "handleapi" "libloaderapi" "lmcons" "memoryapi" "minschannel" "minwinbase" "minwindef" "ntsecapi" "processenv" "profileapi" "schannel" "securitybaseapi" "sspi" "std" "sysinfoapi" "timezoneapi" "winbase" "wincon" "wincrypt" "winerror" "winnt" "winsock2" "winuser" "ws2def" "ws2ipdef" "ws2tcpip" ];
      };
    "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-i686-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "05ihkij18r4gamjpxj4gra24514can762imjzlmak5wlzidplzrp";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "winapi-util 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-util";
        version = "0.1.2";
        edition = "2015";
        sha256 = "07jj7rg7nndd7bqhjin1xphbv8kb5clvhzpqpxkvm3wl84r3mj1h";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = target."windows";
            features = [ "std" "consoleapi" "errhandlingapi" "fileapi" "minwindef" "processenv" "winbase" "wincon" "winerror" "winnt" ];
          };
        };
        features = {
        };
      };
    "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-x86_64-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0n1ylmlsb8yg1v583i4xy0qmqg42275flvbc51hdqjjfjcl9vlbj";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "wincolor 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "wincolor";
        version = "1.0.2";
        edition = "2015";
        sha256 = "0bxgy5pf0pzykb21xipb41yfxs60inrs5kyavllphbrka5aqps89";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = {
          "winapi" = {
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "minwindef" "wincon" ];
          };
          "winapi-util" = "winapi-util 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
        };
      };
    "xattr 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "xattr";
        version = "0.2.2";
        edition = "2015";
        sha256 = "01zqnn6bhrd58hvpj3y1nqnbmlswrvsdapn2zbi7h1bh5lspiyk5";
        authors = [
          "Steven Allen <steven@stebalien.com>"
        ];
        dependencies = {
          "libc" = "libc 0.2.65 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "default" = [ "unsupported" ];
        };
        resolvedDefaultFeatures = [ "default" "unsupported" ];
      };
    "xz2 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "xz2";
        version = "0.1.6";
        edition = "2015";
        sha256 = "1gc9x6c7cxg29xjlj9xkdajvdx7w6mf9mp7550zxwmx6x0z4v5j5";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = {
          "lzma-sys" = "lzma-sys 0.1.15 (registry+https://github.com/rust-lang/crates.io-index)";
        };
        features = {
          "tokio" = [ "tokio-io" "futures" ];
        };
      };
  };

  #
  # crate2nix/default.nix (excerpt start)
  # 

  # Target (platform) data for conditional dependencies.
  # This corresponds to what buildRustCrate is setting.
  target = {
      unix = true;
      windows = false;

      # This doesn't appear to be officially documented anywhere yet.
      # See https://github.com/rust-lang-nursery/rust-forge/issues/101.
      os = if stdenv.hostPlatform.isDarwin
        then "macos"
        else stdenv.hostPlatform.parsed.kernel.name;
      arch = stdenv.hostPlatform.parsed.cpu.name;
      family = "unix";
      env = "gnu";
      endian = if stdenv.hostPlatform.parsed.cpu.significantByte.name == "littleEndian" then "little" else "big";
      pointer_width = toString stdenv.hostPlatform.parsed.cpu.bits;
      vendor = stdenv.hostPlatform.parsed.vendor.name;
      debug_assertions = false;
  };

  /* Filters common temp files and build files */
  # TODO(pkolloch): Substitute with gitignore filter
  sourceFilter = name: type:
    let baseName = builtins.baseNameOf (builtins.toString name);
    in ! (
      # Filter out git
      baseName == ".gitignore" ||
      (type == "directory" && baseName == ".git" ) ||

      # Filter out build results
      (type == "directory" && (
        baseName == "target" ||
        baseName == "_site" ||
        baseName == ".sass-cache" ||
        baseName == ".jekyll-metadata" ||
        baseName == "build-artifacts"
        )) ||

      # Filter out nix-build result symlinks
      (type == "symlink" && lib.hasPrefix "result" baseName) ||

      # Filter out IDE config
      (type == "directory" && (
        baseName == ".idea" ||
        baseName == ".vscode"
        )) ||
      lib.hasSuffix ".iml" baseName ||

      # Filter out nix build files
      # lib.hasSuffix ".nix" baseName ||

      # Filter out editor backup / swap files.
      lib.hasSuffix "~" baseName ||
      builtins.match "^\\.sw[a-z]$$" baseName != null ||
      builtins.match "^\\..*\\.sw[a-z]$$" baseName != null ||
      lib.hasSuffix ".tmp" baseName ||
      lib.hasSuffix ".bak" baseName ||
      baseName == "tests.nix"
    );

  /* A restricted overridable version of  buildRustCrateWithFeaturesImpl. */
  buildRustCrateWithFeatures = {packageId, features}:
    lib.makeOverridable
      (args@{features, ...}:
        let buildRustCrateArgs = lib.filterAttrs (n: _: n != "features") args;
        in (buildRustCrateWithFeaturesImpl {inherit packageId features;}).override buildRustCrateArgs)
      { inherit features; };

  /* Returns a buildRustCrate derivation for the given packageId and features. */
  buildRustCrateWithFeaturesImpl = { crateConfigs? crates, packageId, features } @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let mergedFeatures = mergePackageFeatures args;
        buildByPackageId = packageId:
          let features = mergedFeatures."${packageId}" or [];
              crateConfig = lib.filterAttrs (n: v: n != "resolvedDefaultFeatures") crateConfigs."${packageId}";
              dependencies =
                dependencyDerivations buildByPackageId features (crateConfig.dependencies or {});
              buildDependencies =
                dependencyDerivations buildByPackageId features (crateConfig.buildDependencies or {});
              dependenciesWithRenames =
                lib.filterAttrs (n: v: v ? "rename")
                  (crateConfig.buildDependencies or {} // crateConfig.dependencies or {});
              crateRenames =
                lib.mapAttrs (name: value: value.rename or name) dependenciesWithRenames;
          in buildRustCrate (crateConfig // { inherit features dependencies buildDependencies crateRenames; });
    in buildByPackageId packageId;

  /* Returns the actual derivations for the given dependencies. */
  dependencyDerivations = buildByPackageId: features: dependencies:
    assert (builtins.isFunction buildByPackageId);
    assert (builtins.isList features);
    assert (builtins.isAttrs dependencies);

    let enabledDependencies = filterEnabledDependencies dependencies features;
        depDerivation = dependencyName: dependency:
        buildByPackageId (dependencyPackageId dependency);
    in builtins.attrValues (lib.mapAttrs depDerivation enabledDependencies);

  /* Returns differences between cargo default features and crate2nix default features.
   *
   * This is useful for verifying the feature resolution in crate2nix.
   */
  diffDefaultPackageFeatures = {crateConfigs ? crates, packageId}:
    assert (builtins.isAttrs crateConfigs);

    let prefixValues = prefix: lib.mapAttrs (n: v: { "${prefix}" = v; });
        mergedFeatures =
          prefixValues
            "crate2nix"
            (mergePackageFeatures {inherit crateConfigs packageId; features = ["default"]; });
        configs = prefixValues "cargo" crateConfigs;
        combined = lib.foldAttrs (a: b: a // b) {} [ mergedFeatures configs ];
        onlyInCargo = builtins.attrNames (lib.filterAttrs (n: v: !(v ? "crate2nix" ) && (v ? "cargo")) combined);
        onlyInCrate2Nix = builtins.attrNames (lib.filterAttrs (n: v: (v ? "crate2nix" ) && !(v ? "cargo")) combined);
        differentFeatures = lib.filterAttrs
          (n: v:
          (v ? "crate2nix" )
          && (v ? "cargo")
          && (v.crate2nix.features or []) != (v."cargo".resolved_default_features or []))
          combined;
    in builtins.toJSON { inherit onlyInCargo onlyInCrate2Nix differentFeatures; };

  /* Returns the feature configuration by package id for the given input crate. */
  mergePackageFeatures = {crateConfigs ? crates, packageId, features} @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let packageFeatures = listOfPackageFeatures args;
        grouped = lib.groupBy (x: x.packageId) packageFeatures;
    in lib.mapAttrs (n: v: sortedUnique (builtins.concatLists (builtins.map (v: v.features) v))) grouped;

  /* Returns a { packageId, features } attribute set for every package needed for building the
     package for the given packageId with the given features.

     Returns multiple, potentially conflicting attribute sets for dependencies that are reachable
     by multiple paths in the dependency tree.
  */
  listOfPackageFeatures = {crateConfigs ? crates, packageId, features, dependencyPath? [packageId]} @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let
        crateConfig = crateConfigs."${packageId}" or (builtins.throw "Package not found: ${packageId}");
        expandedFeatures = expandFeatures (crateConfig.features or {}) features;

        depWithResolvedFeatures = dependencyName: dependency:
          let packageId = dependencyPackageId dependency;
              features = dependencyFeatures expandedFeatures dependencyName dependency;
          in { inherit packageId features; };

        resolveDependencies = path: dependencies:
          assert (builtins.isAttrs dependencies);

          let enabledDependencies = filterEnabledDependencies dependencies expandedFeatures;
              directDependencies =
                builtins.attrValues (lib.mapAttrs depWithResolvedFeatures enabledDependencies);
          in builtins.concatMap
            ({packageId, features}: listOfPackageFeatures {
              # This is purely for debugging.
              dependencyPath = dependencyPath ++ [path packageId];
              inherit crateConfigs packageId features;
            })
             directDependencies;

        resolvedDependencies = builtins.concatLists
          [
            (resolveDependencies "dependencies" (crateConfig.dependencies or {}))
            (resolveDependencies "buildDependencies" (crateConfig.buildDependencies or {}))
          ];

    in [{inherit packageId; features = expandedFeatures;}] ++ resolvedDependencies;

  /* Returns the enabled dependencies given the enabled features. */
  filterEnabledDependencies = dependencies: features:
    assert (builtins.isAttrs dependencies);
    assert (builtins.isList features);

    lib.filterAttrs
      (depName: dep:
        builtins.isString dep
        || dep.target or true
        && (!(dep.optional or false) || builtins.any (doesFeatureEnableDependency depName) features))
      dependencies;

  /* Returns whether the given feature should enable the given dependency. */
  doesFeatureEnableDependency = depName: feature:
    let prefix = "${depName}/";
        len = builtins.stringLength prefix;
        startsWithPrefix = builtins.substring 0 len feature == prefix;
    in feature == depName || startsWithPrefix;

  /* Returns the expanded features for the given inputFeatures by applying the rules in featureMap.

     featureMap is an attribute set which maps feature names to lists of further feature names to enable in case this
     feature is selected.
  */
  expandFeatures = featureMap: inputFeatures:
    assert (builtins.isAttrs featureMap);
    assert (builtins.isList inputFeatures);

    let expandFeature = feature:
          assert (builtins.isString feature);
          [feature] ++ (expandFeatures featureMap (featureMap."${feature}" or []));
        outFeatures = builtins.concatMap expandFeature inputFeatures;
    in sortedUnique outFeatures;

  /* The package ID of the given dependency. */
  dependencyPackageId = dependency: if builtins.isString dependency then dependency else dependency.packageId;

  /* Returns the actual dependencies for the given dependency. */
  dependencyFeatures = features: dependencyName: dependency:
    assert (builtins.isList features);
    assert (builtins.isString dependencyName);
    assert (builtins.isAttrs dependency || builtins.isString dependency);

    let defaultOrNil = if builtins.isString dependency || dependency.usesDefaultFeatures or true
                       then ["default"]
                       else [];
        explicitFeatures = if builtins.isString dependency then [] else dependency.features or [];
        additionalDependencyFeatures =

          let dependencyPrefix = dependencyName+"/";
              dependencyFeatures =
                builtins.filter (f: lib.hasPrefix dependencyPrefix f) features;
          in builtins.map (lib.removePrefix dependencyPrefix) dependencyFeatures;
    in
      defaultOrNil ++ explicitFeatures ++ additionalDependencyFeatures;

  /* Sorts and removes duplicates from a list of strings. */
  sortedUnique = features:
    assert (builtins.isList features);
    assert (builtins.all builtins.isString features);

    let outFeaturesSet = lib.foldl (set: feature: set // {"${feature}" = 1;} ) {} features;
        outFeaturesUnique = builtins.attrNames outFeaturesSet;
    in builtins.sort (a: b: a < b) outFeaturesUnique;

  #
  # crate2nix/default.nix (excerpt end)
  # 

}
